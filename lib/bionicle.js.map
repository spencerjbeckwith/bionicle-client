{"version":3,"sources":["bionicle.js"],"names":[],"mappings":"AAAC,WAAY,CACT,aADS,MA2CG,IAAI,CAAC,GA3CR,GA2CY,IAAI,CAAC,KA3CjB,CAmCT,QAAS,CAAA,CAAT,EAAwB,CAOpB;AAQ+B;AAb3B,CAFgB,CAChB,MAAM,CAAC,UAAP,CAAoB,MAAM,CAAC,WADX,CAER,MAAM,CAAC,UAAP,CAAkB,CAAM,CAAC,KAFjB,CAIR,MAAM,CAAC,WAAP,CAAmB,CAAM,CAAC,MAJlB,CAQpB,CAAK,CAAG,EAAS,EAAW,CAAX,CAAT,CAA2B,CAA3B,CARY,CASpB,CAAM,CAAC,KAAP,CAAe,CAAM,CAAC,KAAP,CAAa,CATR,CAUpB,CAAM,CAAC,MAAP,CAAgB,CAAM,CAAC,MAAP,CAAc,CAVV,CAWpB,CAAO,CAAC,KAAR,CAAgB,CAAM,CAAC,KAXH,CAYpB,CAAO,CAAC,MAAR,CAAiB,CAAM,CAAC,MAZJ,CAcpB,CAAG,CAAC,qBAAJ,GAdoB,CAepB,CAAG,CAAC,YAAJ,CAAiB,CAAjB,CAAmB,CAAnB,CAAqB,CAArB,CAAuB,CAAvB,CAAyB,CAAzB,CAA2B,CAA3B,CAfoB,CAgBpB,CAAG,CAAC,KAAJ,CAAU,CAAV,CAAgB,CAAhB,CACH,CA+QD;AACJ;AACA;AACA;AACA;AACA,OACI,QAAS,CAAA,CAAT,CAAuB,CAAvB,CAAiC,CAAjC,CAAyC,OAKlB,IAAI,CAAC,GALa,IACjC,CAAA,CAAC,CAAG,QAAQ,CAAC,CAAS,CAAC,KAAV,CAAgB,CAAhB,CAAkB,CAAlB,CAAD,CAAsB,EAAtB,CAAR,CAAoC,GADP,CAEjC,CAAC,CAAG,QAAQ,CAAC,CAAS,CAAC,KAAV,CAAgB,CAAhB,CAAkB,CAAlB,CAAD,CAAsB,EAAtB,CAAR,CAAoC,GAFP,CAGjC,CAAC,CAAG,QAAQ,CAAC,CAAS,CAAC,KAAV,CAAgB,CAAhB,CAAkB,CAAlB,CAAD,CAAsB,EAAtB,CAAR,CAAoC,GAHP,CASrC,MALI,CAAA,CAKJ,GAJI,CAAC,CAAG,EAAS,CAAT,CAAW,EAAS,CAAT,CAAW,CAAC,CAAC,CAAb,CAAX,CAIR,CAHI,CAAC,CAAG,EAAS,CAAT,CAAW,EAAS,CAAT,CAAW,CAAC,CAAC,CAAb,CAAX,CAGR,CAFI,CAAC,CAAG,EAAS,CAAT,CAAW,EAAS,CAAT,CAAW,CAAC,CAAC,CAAb,CAAX,CAER,EAAO,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CACV,CAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACI,QAAS,CAAA,CAAT,CAAiB,CAAjB,CAA4B,CAA5B,CAAyC,CAAzC,CAAgD,CAAmB,CAAG,EAAtE,CAA0E,CAAqB,CAAG,EAAlG,CAAsG,CAAe,CAAG,EAAxH,CAA6H,CACzH;AACA;AACA;AAEA;AACA,KAAK,OAAL,CAAe,CACX,CAAa,CAAC,CAAD,CAAY,CAAZ,CADF,CAEX,CAAa,CAAC,CAAD,CAAY,CAAZ,CAFF,CAGX,CAAa,CAAC,CAAD,CAAY,CAAC,CAAb,CAHF,CAN0G,CAWzH,KAAK,SAAL,CAAiB,CACb,CAAa,CAAC,CAAD,CAAc,CAAd,CADA,CAEb,CAAa,CAAC,CAAD,CAAc,CAAd,CAFA,CAGb,CAAa,CAAC,CAAD,CAAc,CAAC,CAAf,CAHA,CAXwG,CAgBzH,KAAK,GAAL,CAAW,CACP,CAAa,CAAC,CAAD,CAAQ,CAAR,CADN,CAEP,CAAa,CAAC,CAAD,CAAQ,CAAR,CAFN,CAGP,CAAa,CAAC,CAAD,CAAQ,CAAC,CAAT,CAHN,CAKd,CA6GD,QAAS,CAAA,CAAT,CAAyB,CAAzB,CAA8B,CAC1B,KAAM,CAAA,CAAM,CAAG,GAAI,CAAA,CAAJ,CAAW,CAAG,CAAC,MAAf,CAAsB,CAAG,CAAC,QAA1B,CAAf,CACA;AACA,CAAM,CAAC,iBAAP,CAA2B,CAAE,CAAC,iBAAH,CAAqB,CAAM,CAAC,OAA5B,CAAoC,YAApC,CAHD,CAI1B,CAAM,CAAC,gBAAP,CAA0B,CAAE,CAAC,iBAAH,CAAqB,CAAM,CAAC,OAA5B,CAAoC,YAApC,CAJA,CAK1B,CAAM,CAAC,cAAP,CAAwB,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,kBAArC,CALE,CAM1B,CAAM,CAAC,aAAP,CAAuB,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,kBAArC,CANG,CAO1B,CAAM,CAAC,YAAP,CAAsB,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,SAArC,CAPI,CAW1B,CAAM,CAAC,MAAP,CAAgB,CAAE,CAAC,YAAH,EAXU,CAY1B,KAAM,CAAA,CAAa,CAAG,GAAI,CAAA,YAAJ,CAAiB,CACnC,CADmC,CAChC,CADgC,CAC5B,CAD4B,CACzB,CADyB,CACrB,CADqB,CAClB,CADkB,CAEnC,CAFmC,CAEhC,CAFgC,CAE5B,CAF4B,CAEzB,CAFyB,CAErB,CAFqB,CAElB,CAFkB,CAAjB,CAAtB,CA0BA,MAtBA,CAAA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,YAAjB,CAA8B,CAAM,CAAC,MAArC,CAsBA,CArBA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,YAAjB,CAA8B,CAA9B,CAA4C,CAAE,CAAC,WAA/C,CAqBA,CAnBA,CAAE,CAAC,uBAAH,CAA2B,CAAM,CAAC,iBAAlC,CAmBA,CAlBA,CAAE,CAAC,mBAAH,CAAuB,CAAM,CAAC,iBAA9B,CAAgD,CAAhD,CAAkD,CAAE,CAAC,KAArD,IAAiE,CAAjE,CAAmE,CAAnE,CAkBA,CAhBA,CAAE,CAAC,uBAAH,CAA2B,CAAM,CAAC,gBAAlC,CAgBA,CAfA,CAAE,CAAC,mBAAH,CAAuB,CAAM,CAAC,gBAA9B,CAA+C,CAA/C,CAAiD,CAAE,CAAC,KAApD,IAAgE,CAAhE,CAAkE,CAAlE,CAeA,CAbA,CAAM,CAAC,GAAP,CAAa,UAAW,CAEhB,CAAa,GAAK,IAFF,GAGhB,CAAa,CAAG,IAHA,CAIhB,CAAE,CAAC,UAAH,CAAc,KAAK,OAAnB,CAJgB,CAOhB,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,YAAjB,CAA8B,CAAM,CAAC,MAArC,CAPgB,CAQhB,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,YAAjB,CAA8B,GAAI,CAAA,YAAJ,CAAiB,CAAjB,CAA9B,CAA8D,CAAE,CAAC,WAAjE,CARgB,CAShB,CAAE,CAAC,mBAAH,CAAuB,CAAe,CAAC,iBAAvC,CAAyD,CAAzD,CAA2D,CAAE,CAAC,KAA9D,IAA0E,CAA1E,CAA4E,CAA5E,CATgB,CAWvB,CAED,CAAO,CACV,CA6ED;AACJ;AACA;AACA;AACA,OACI,cAAe,CAAA,CAAf,CAA2B,CAA3B,CAAgC,CAC5B,MAAO,IAAI,CAAA,OAAJ,CAAY,SAAS,CAAT,CAAiB,CAAjB,CAAyB,CACxC,KAAM,CAAA,CAAO,CAAG,CAAE,CAAC,aAAH,EAAhB,CACA,CAAE,CAAC,WAAH,CAAe,CAAE,CAAC,UAAlB,CAA6B,CAA7B,CAFwC,CAGxC,CAAE,CAAC,aAAH,CAAiB,CAAE,CAAC,UAApB,CAA+B,CAAE,CAAC,kBAAlC,CAAqD,CAAE,CAAC,OAAxD,CAHwC,CAIxC,CAAE,CAAC,aAAH,CAAiB,CAAE,CAAC,UAApB,CAA+B,CAAE,CAAC,kBAAlC,CAAqD,CAAE,CAAC,OAAxD,CAJwC,CAKxC,CAAE,CAAC,aAAH,CAAiB,CAAE,CAAC,UAApB,CAA+B,CAAE,CAAC,cAAlC,CAAiD,CAAE,CAAC,aAApD,CALwC,CAMxC,CAAE,CAAC,aAAH,CAAiB,CAAE,CAAC,UAApB,CAA+B,CAAE,CAAC,cAAlC,CAAiD,CAAE,CAAC,aAApD,CANwC,CAQxC,KAAM,CAAA,CAAK,CAAG,GAAI,CAAA,KAAlB,CACA,CAAK,CAAC,GAAN,CAAY,CAT4B,CAUxC,CAAK,CAAC,gBAAN,CAAuB,MAAvB,CAA8B,UAAW,CACrC,CAAE,CAAC,WAAH,CAAe,CAAE,CAAC,UAAlB,CAA6B,CAA7B,CADqC,CAErC,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,UAAjB,CAA4B,CAA5B,CAA8B,CAAE,CAAC,IAAjC,CAAsC,CAAE,CAAC,IAAzC,CAA8C,CAAE,CAAC,aAAjD,CAA+D,CAA/D,CAFqC,CAGrC,CAAO,CAAC,CAAD,CACV,CAJD,CAVwC,CAexC,CAAK,CAAC,gBAAN,CAAuB,OAAvB,CAA+B,SAAS,CAAT,CAAc,CACzC,CAAM,CAAC,CAAD,CACT,CAFD,CAGH,CAlBM,CAmBV,CAED;AAwBA;AACJ;AACA;AACA,OACI,QAAS,CAAA,CAAT,CAAqB,CAArB,CAAmC,CAC/B,CAAE,CAAC,eAAH,CAAmB,CAAE,CAAC,WAAtB,CAAkC,CAAlC,CAD+B,CAE/B,CAAE,CAAC,QAAH,CAAY,CAAZ,CAAc,CAAd,CAAgB,CAAM,CAAC,KAAvB,CAA6B,CAAM,CAAC,MAApC,CAF+B,CAG/B,CAAE,CAAC,UAAH,CAAc,CAAd,CAAgB,CAAhB,CAAkB,CAAlB,CAAoB,CAApB,CAH+B,CAI/B,CAAE,CAAC,KAAH,CAAS,CAAE,CAAC,gBAAZ,CAJ+B,CAK/B,CAAG,CAAC,SAAJ,CAAc,CAAd,CAAgB,CAAhB,CAAkB,CAAM,CAAC,KAAzB,CAA+B,CAAM,CAAC,MAAtC,CAL+B,CAM/B,CAAG,CAAC,IAAJ,EAN+B,CAO/B,CAAE,CAAC,WAAH,CAAe,CAAE,CAAC,UAAlB,CAA6B,CAA7B,CAP+B,CAQ/B,CAAW,CAAC,GAAZ,EAR+B,CAS/B,CAAE,CAAC,SAAH,CAAa,CAAW,CAAC,YAAzB,CAAsC,CAAtC,CAAwC,CAAxC,CAA0C,CAA1C,CAA4C,CAA5C,CACH,CAED;AACJ;AACA,OACI,QAAS,CAAA,CAAT,EAA2B,CACvB;AAOA;AAGA;AAKA;AAdA,CAAE,CAAC,eAAH,CAAmB,CAAE,CAAC,WAAtB,CAAkC,IAAlC,CAFuB,CAGvB,CAAE,CAAC,QAAH,CAAY,CAAZ,CAAc,CAAd,CAAgB,CAAM,CAAC,KAAvB,CAA6B,CAAM,CAAC,MAApC,CAHuB,CAIvB,CAAE,CAAC,UAAH,CAAc,CAAd,CAAgB,CAAhB,CAAkB,CAAlB,CAAoB,CAApB,CAJuB,CAKvB,CAAE,CAAC,KAAH,CAAS,CAAE,CAAC,gBAAZ,CALuB,CAMvB,CAAE,CAAC,WAAH,CAAe,CAAE,CAAC,UAAlB,CAA6B,CAA7B,CANuB,CASvB,CAAW,CAAC,GAAZ,EATuB,CAYvB,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,YAAjB,CAA8B,CAAW,CAAC,MAA1C,CAZuB,CAavB,CAAE,CAAC,uBAAH,CAA2B,CAAW,CAAC,iBAAvC,CAbuB,CAcvB,CAAE,CAAC,mBAAH,CAAuB,CAAW,CAAC,iBAAnC,CAAqD,CAArD,CAAuD,CAAE,CAAC,KAA1D,IAAsE,CAAtE,CAAwE,CAAxE,CAduB,CAiBvB,CAAE,CAAC,gBAAH,CAAoB,CAAW,CAAC,cAAhC,IAAqD,CAArD,CAjBuB,CAkBvB,CAAE,CAAC,gBAAH,CAAoB,CAAW,CAAC,aAAhC,IAAoD,CAApD,CAlBuB,CAmBvB,CAAE,CAAC,UAAH,CAAc,CAAW,CAAC,YAA1B,CAAuC,CAAvC,CAnBuB,CAoBvB,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,SAAjB,CAA2B,CAA3B,CAA6B,CAA7B,CApBuB,CAqBvB,CAAG,CAAC,OAAJ,EACH,CAoOD,QAAS,CAAA,CAAT,CAAoB,CAApB,CAAwB,CAAxB,CAA+B,CAK3B,MAJA,CAAA,CAAK,CAAG,EAAW,CAAX,CAIR,CAHK,CAAG,CAAC,MAAJ,CAAW,CAAX,CAGL,GAFI,CAAK,EAAI,CAAG,CAAC,MAAJ,CAAW,MAExB,EAAO,CACV,CAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACI,QAAS,CAAA,CAAT,CAAwB,CAAxB,CAA+B,CAA/B,CAAqC,CAArC,CAAuC,CAAvC,CAAyC,CAAzC,CAAiD,CAAC,CAAG,CAArD,CAAuD,CAAC,CAAG,CAA3D,CAA6D,CAAC,CAAG,CAAjE,CAAmE,CAAC,CAAG,CAAvE,CAAyE,CAAW,CAAG,IAAvF,CAA6F,CACzF,CAAU,CAAC,GAAX,EADyF,CAEzF,CAAK,CAAG,CAAU,CAAC,CAAD,CAAQ,CAAR,CAFuE,CAIzF;AACA,GAAI,CAAA,CAAG,CAAG,CAAM,CAAC,UAAjB,CAWA;AAGA;AAGA;AAhBA,CAAG,CAAG,CAAM,CAAC,WAAP,CAAmB,CAAnB,CAAuB,CAAvB,CAAyB,CAAzB,CANmF,CAOzF,CAAG,CAAG,CAAM,CAAC,OAAP,CAAe,CAAf,CAAmB,CAAM,CAAC,KAA1B,CAAgC,CAAM,CAAC,MAAvC,CAPmF,CAUrF,CAVqF,GAWrF,CAAG,CAAG,CAAW,CAAC,CAAD,CAXoE,EAczF,CAAE,CAAC,gBAAH,CAAoB,CAAU,CAAC,cAA/B,IAAoD,CAApD,CAdyF,CAiBzF,CAAE,CAAC,gBAAH,CAAoB,CAAU,CAAC,aAA/B,IAAmD,CAAM,CAAC,MAAP,CAAc,CAAd,EAAqB,aAAxE,CAjByF,CAoBzF,CAAE,CAAC,SAAH,CAAa,CAAU,CAAC,YAAxB,CAAqC,CAArC,CAAuC,CAAvC,CAAyC,CAAzC,CAA2C,CAA3C,CApByF,CAuBzF,CAAU,CAAC,UAAX,CAAsB,CAAtB,CAvByF,CAyBzF,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,SAAjB,CAA2B,CAA3B,CAA6B,CAA7B,CACH,CAED;AACA;AAEA;AAOA;AACJ;AACA;AACA;AACA;AACA;AACA,OACI,QAAS,CAAA,CAAT,CAAc,CAAd,CAAgB,CAAhB,CAAkB,CAAlB,CAA0B,CACtB,MAAO,CAAA,CAAC,CAAE,CAAM,EAAE,CAAC,CAAC,CAAJ,CACnB,CAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACI,QAAS,CAAA,CAAT,CAAgB,CAAhB,CAAkB,CAAlB,CAAoB,CAApB,CAA2B,CAAS,CAAG,EAAvC,CAA4C,OAKpC,IAAI,CAAC,GAL+B,OACpC,CAAA,CAAC,GAAK,CAD8B,CAE7B,CAF6B,EAIxC,CAAC,CAAG,CAAI,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAJgC,CAKpC,EAAS,CAAC,CAAC,CAAX,EAAgB,CALoB,GAMpC,CAAC,CAAG,CANgC,EAQjC,CARiC,CAS3C,CAED;AACA;AAoEA,QAAS,CAAA,CAAT,EAAwB,CACpB,MAAO,IAAG,IAAI,CAAC,KAAL,CAAW,IAAI,IAAI,CAAC,MAAL,EAAf,CACb,CAED,2BAzjCS,CA6uCT;AACA,QAAS,CAAA,CAAT,EAAgB,CACZ;AAGA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAxBQ,CAAW,CAAC,CAAD,CAFC,CA4BZ,CAAM,CAAC,IAAP,EA5BY,CA8BZ,CAAe,EA9BH,CA+BZ,CAAK,CAAC,KAAN,EA/BY,CAgCZ,qBAAqB,CAAC,CAAD,CACxB,CAED;AA9wCA,GAAI,CAAA,CAAM,CAAG,CACT,IAAI,CAAE,kBADG,CAET,KAAK,CAAE,GAFE,CAGT,MAAM,CAAE,GAHC,CAIT,UAAU,CAAE,IAJH,CAKT,WAAW,CAAE,IALJ,CAAb,CAQA;AAXS,KAYH,CAAA,CAAM,CAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAZN,CAaH,CAAO,CAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAbP,CAcT,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,CAA1B,CAdS,CAeT,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,CAA1B,CAfS,CAgBT,CAAM,CAAC,KAAP,CAAe,CAAM,CAAC,KAhBb,CAiBT,CAAM,CAAC,MAAP,CAAgB,CAAM,CAAC,MAjBd,CAkBT,CAAO,CAAC,KAAR,CAAgB,CAAM,CAAC,KAlBd,CAmBT,CAAO,CAAC,MAAR,CAAiB,CAAM,CAAC,MAnBf,CAqBT;AACA,KAAM,CAAA,CAAE,CAAG,CAAM,CAAC,UAAP,CAAkB,OAAlB,CAA0B,CACjC,SAAS,GADwB,CAA1B,CAAX,CAGA,GAAW,IAAP,GAAA,CAAJ,CACI,KAAM,IAAI,CAAA,KAAJ,CAAU,6BAAV,CAAN,CAGJ;AACA,KAAM,CAAA,CAAG,CAAG,CAAO,CAAC,UAAR,CAAmB,IAAnB,CAAZ,CACA,CAAG,CAAC,qBAAJ,GA/BS,CAiCT;AACA,GAAI,CAAA,CAAK,CAAG,CAAZ,CAmBA,CAAY,EArDH,CAsDT,MAAM,CAAC,gBAAP,CAAwB,QAAxB,CAAiC,CAAjC,CAtDS,CAuDT,MAAM,CAAC,gBAAP,CAAwB,mBAAxB,CAA4C,CAA5C,CAvDS,IAqFL,CAAA,CAAe,CAAG,CACtB,MAAM,CAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,EAR0B,CAUtB,QAAQ,CAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA,EAjB0B,CArFb,CAyGL,CAAU,CAAG,CACjB,MAAM,CAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAdqB,CAgBjB,QAAQ,CAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAzEqB,CAzGR,MAqLH,CAAA,CAAM,CAAG,CACX;AACR;AACA;AACA;AACA;AACA,WACQ,QAAQ,CAAE,SAAS,CAAT,CAAY,CAAZ,CAAe,IACjB,CAAA,CAAG,CAAG,CAAC,GADU,CAEjB,CAAG,CAAG,CAAC,GAFU,CAGjB,CAAG,CAAG,CAAC,GAHU,CAIjB,CAAG,CAAG,CAAC,GAJU,CAKjB,CAAG,CAAG,CAAC,GALU,CAMjB,CAAG,CAAG,CAAC,GANU,CAOjB,CAAG,CAAG,CAAC,GAPU,CAQjB,CAAG,CAAG,CAAC,GARU,CASjB,CAAG,CAAG,CAAC,GATU,CAWjB,CAAG,CAAG,CAAC,GAXU,CAYjB,CAAG,CAAG,CAAC,GAZU,CAajB,CAAG,CAAG,CAAC,GAbU,CAcjB,CAAG,CAAG,CAAC,GAdU,CAejB,CAAG,CAAG,CAAC,GAfU,CAgBjB,CAAG,CAAG,CAAC,GAhBU,CAiBjB,CAAG,CAAG,CAAC,GAjBU,CAkBjB,CAAG,CAAG,CAAC,GAlBU,CAmBjB,CAAG,CAAG,CAAC,GAnBU,CAqBrB,MAAO,CACL,CAAG,CAAG,CAAN,CAAY,CAAG,CAAG,CAAlB,CAAwB,CAAG,CAAG,CADzB,CAEL,CAAG,CAAG,CAAN,CAAY,CAAG,CAAG,CAAlB,CAAwB,CAAG,CAAG,CAFzB,CAGL,CAAG,CAAG,CAAN,CAAY,CAAG,CAAG,CAAlB,CAAwB,CAAG,CAAG,CAHzB,CAIL,CAAG,CAAG,CAAN,CAAY,CAAG,CAAG,CAAlB,CAAwB,CAAG,CAAG,CAJzB,CAKL,CAAG,CAAG,CAAN,CAAY,CAAG,CAAG,CAAlB,CAAwB,CAAG,CAAG,CALzB,CAML,CAAG,CAAG,CAAN,CAAY,CAAG,CAAG,CAAlB,CAAwB,CAAG,CAAG,CANzB,CAOL,CAAG,CAAG,CAAN,CAAY,CAAG,CAAG,CAAlB,CAAwB,CAAG,CAAG,CAPzB,CAQL,CAAG,CAAG,CAAN,CAAY,CAAG,CAAG,CAAlB,CAAwB,CAAG,CAAG,CARzB,CASL,CAAG,CAAG,CAAN,CAAY,CAAG,CAAG,CAAlB,CAAwB,CAAG,CAAG,CATzB,CAWV,CAvCU,CAyCX;AACR;AACA;AACA;AACA;AACA;AACA,WACQ,WAAW,CAAE,SAAS,CAAT,CAAa,CAAb,CAAgB,CAAhB,CAAoB,CAC7B,MAAO,CAAA,CAAM,CAAC,QAAP,CAAgB,CAAhB,CACP,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CACI,CADJ,CACO,CADP,CACU,CADV,CAEI,CAFJ,CAEQ,CAFR,CAEY,CAFZ,CADO,CAKV,CAtDU,CAwDX;AACR;AACA;AACA;AACA;AACA,WACQ,QAAQ,CAAE,SAAS,CAAT,CAAa,CAAb,CAA6B,IAC/B,CAAA,CAAC,CAAG,IAAI,CAAC,GAAL,CAAS,CAAT,CAD2B,CAE/B,CAAC,CAAG,IAAI,CAAC,GAAL,CAAS,CAAT,CAF2B,CAGnC,MAAO,CAAA,CAAM,CAAC,QAAP,CAAgB,CAAhB,CACP,CAAI,CAAJ,CAAM,CAAC,CAAP,CAAU,CAAV,CACI,CADJ,CACO,CADP,CACU,CADV,CAEI,CAFJ,CAEO,CAFP,CAEU,CAFV,CADO,CAKV,CAtEU,CAwEX;AACR;AACA;AACA;AACA;AACA;AACA,WACQ,OAAO,CAAE,SAAS,CAAT,CAAa,CAAb,CAAgB,CAAhB,CAAoB,CACzB,MAAO,CAAA,CAAM,CAAC,QAAP,CAAgB,CAAhB,CACP,CAAI,CAAJ,CAAQ,CAAR,CAAW,CAAX,CACI,CADJ,CACO,CADP,CACW,CADX,CAEI,CAFJ,CAEO,CAFP,CAEU,CAFV,CADO,CAKV,CArFU,CAuFX,UAAU,CAAE,CACR,EAAE,CAAM,CAAC,KADD,CACQ,CADR,CACW,CADX,CAER,CAFQ,CAEL,CAAC,CAAD,CAAG,CAAM,CAAC,MAFL,CAEa,CAFb,CAGR,CAAC,CAHO,CAGJ,CAHI,CAGD,CAHC,CAvFD,CA6FX,QAAQ,CAAE,CACN,CADM,CACH,CADG,CACA,CADA,CAEN,CAFM,CAEH,CAFG,CAEA,CAFA,CAGN,CAHM,CAGH,CAHG,CAGA,CAHA,CA7FC,CArLN,CA0RH,CAAM,CAAG,CACX,GAAG,CAAE,QADM,CAEX,QAAQ,CAAE,QAFC,CAGX,MAAM,CAAE,QAHG,CAIX,KAAK,CAAE,QAJI,CAKX,GAAG,CAAE,QALM,CAMX,KAAK,CAAE,QANI,CAOX,KAAK,CAAE,QAPI,CAQX,QAAQ,CAAE,QARC,CASX,KAAK,CAAE,QATI,CAUX,UAAU,CAAE,QAVD,CAWX,SAAS,CAAE,QAXA,CAYX,IAAI,CAAE,QAZK,CAaX,MAAM,CAAE,QAbG,CAcX,IAAI,CAAE,QAdK,CAeX,UAAU,CAAE,QAfD,CAgBX,MAAM,CAAE,QAhBG,CAiBX,QAAQ,CAAE,QAjBC,CAkBX,aAAa,CAAE,QAlBJ,CAmBX,YAAY,CAAE,QAnBH,CAoBX,cAAc,CAAE,QApBL,CAqBX,cAAc,CAAE,QAEhB;AACA;AAxBW,CA1RN,CAsTH,CAAa,CAAG,CAClB;AACA,OAAO,CAAE,QAFS,CAGlB,YAAY,CAAE,QAHI,CAIlB,WAAW,CAAE,QAJK,CAKlB,SAAS,CAAE,QALO,CAMlB,cAAc,CAAE,QANE,CAOlB,aAAa,CAAE,QAPG,CAQlB,GAAG,CAAE,QARa,CASlB,QAAQ,CAAE,QATQ,CAUlB,OAAO,CAAE,QAVS,CAtTb,CAuXH,CAAQ,CAAG,CACb,IAAI,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,GAAnB,CAAuB,CAAM,CAAC,MAA9B,CAAqC,CAAM,CAAC,QAA5C,CADO,CAEb,MAAM,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,KAAnB,CAAyB,CAAM,CAAC,GAAhC,CAAoC,CAAM,CAAC,MAA3C,CAFK,CAGb,IAAI,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,KAAnB,CAAyB,CAAM,CAAC,QAAhC,CAAyC,CAAM,CAAC,KAAhD,CAHO,CAIb,MAAM,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,KAAnB,CAAyB,CAAM,CAAC,SAAhC,CAA0C,CAAM,CAAC,UAAjD,CAJK,CAKb,IAAI,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,IAAnB,CAAwB,CAAM,CAAC,UAA/B,CAA0C,CAAM,CAAC,MAAjD,CALO,CAMb,IAAI,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,KAAnB,CAAyB,CAAM,CAAC,IAAhC,CAAqC,CAAM,CAAC,IAA5C,CANO,CAOb,MAAM,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,MAAnB,CAA0B,CAAM,CAAC,GAAjC,CAAqC,CAAM,CAAC,QAA5C,CAPK,CAQb,KAAK,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,GAAnB,CAAuB,CAAM,CAAC,KAA9B,CAAoC,CAAM,CAAC,MAA3C,CARM,CASb,MAAM,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,QAAnB,CAA4B,CAAM,CAAC,KAAnC,CAAyC,CAAM,CAAC,KAAhD,CATK,CAUb,IAAI,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,SAAnB,CAA6B,CAAM,CAAC,KAApC,CAA0C,CAAM,CAAC,UAAjD,CAVO,CAWb,MAAM,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,UAAnB,CAA8B,CAAM,CAAC,IAArC,CAA0C,CAAM,CAAC,MAAjD,CAXK,CAYb,KAAK,CAAE,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,IAAnB,CAAwB,CAAM,CAAC,KAA/B,CAAqC,CAAM,CAAC,IAA5C,CAEP;AAEA;AAhBa,CAvXR,CAyRT;AAqHA,CAAQ,CAAC,IAAT,CAAc,IAAd,CAAqB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,YAAnB,CAAgC,CAAM,CAAC,MAAvC,CAA8C,CAAM,CAAC,QAArD,CAA8D,EAA9D,CA9YZ,CA+YT,CAAQ,CAAC,IAAT,CAAc,MAAd,CAAuB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,cAAnB,CAAkC,CAAM,CAAC,MAAzC,CAAgD,CAAM,CAAC,QAAvD,CAAgE,EAAhE,CA/Yd,CAgZT,CAAQ,CAAC,MAAT,CAAgB,IAAhB,CAAuB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,YAAnB,CAAgC,CAAM,CAAC,GAAvC,CAA2C,CAAM,CAAC,MAAlD,CAAyD,EAAzD,CAhZd,CAiZT,CAAQ,CAAC,MAAT,CAAgB,MAAhB,CAAyB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,cAAnB,CAAkC,CAAM,CAAC,GAAzC,CAA6C,CAAM,CAAC,MAApD,CAA2D,EAA3D,CAjZhB,CAkZT,CAAQ,CAAC,IAAT,CAAc,IAAd,CAAqB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,YAAnB,CAAgC,CAAM,CAAC,QAAvC,CAAgD,CAAM,CAAC,KAAvD,CAA6D,EAA7D,CAlZZ,CAmZT,CAAQ,CAAC,IAAT,CAAc,MAAd,CAAuB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,cAAnB,CAAkC,CAAM,CAAC,QAAzC,CAAkD,CAAM,CAAC,KAAzD,CAA+D,EAA/D,CAnZd,CAoZT,CAAQ,CAAC,MAAT,CAAgB,IAAhB,CAAuB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,YAAnB,CAAgC,CAAM,CAAC,SAAvC,CAAiD,CAAM,CAAC,UAAxD,CAAmE,EAAnE,CApZd,CAqZT,CAAQ,CAAC,MAAT,CAAgB,MAAhB,CAAyB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,cAAnB,CAAkC,CAAM,CAAC,SAAzC,CAAmD,CAAM,CAAC,UAA1D,CAAqE,EAArE,CArZhB,CAsZT,CAAQ,CAAC,IAAT,CAAc,IAAd,CAAqB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,YAAnB,CAAgC,CAAM,CAAC,UAAvC,CAAkD,CAAM,CAAC,MAAzD,CAAgE,EAAhE,CAtZZ,CAuZT,CAAQ,CAAC,IAAT,CAAc,MAAd,CAAuB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,cAAnB,CAAkC,CAAM,CAAC,UAAzC,CAAoD,CAAM,CAAC,MAA3D,CAAkE,EAAlE,CAvZd,CAwZT,CAAQ,CAAC,IAAT,CAAc,IAAd,CAAqB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,YAAnB,CAAgC,CAAM,CAAC,IAAvC,CAA4C,CAAM,CAAC,IAAnD,CAAwD,EAAxD,CAxZZ,CAyZT,CAAQ,CAAC,IAAT,CAAc,MAAd,CAAuB,GAAI,CAAA,CAAJ,CAAY,CAAM,CAAC,cAAnB,CAAkC,CAAM,CAAC,IAAzC,CAA8C,CAAM,CAAC,IAArD,CAA0D,EAA1D,CAzZd,CA2ZT;AAEA,KAAM,CAAA,CAAc,CAAG,CACnB;AACA,OAAO,CAAE,CACL,CAAa,CAAC,CAAa,CAAC,OAAf,CAAuB,CAAvB,CADR,CAEL,CAAa,CAAC,CAAa,CAAC,YAAf,CAA4B,CAA5B,CAFR,CAGL,CAAa,CAAC,CAAa,CAAC,WAAf,CAA2B,CAA3B,CAHR,CAFU,CAOnB,SAAS,CAAE,CACP,CAAa,CAAC,CAAa,CAAC,SAAf,CAAyB,CAAzB,CADN,CAEP,CAAa,CAAC,CAAa,CAAC,cAAf,CAA8B,CAA9B,CAFN,CAGP,CAAa,CAAC,CAAa,CAAC,aAAf,CAA6B,CAA7B,CAHN,CAPQ,CAYnB,GAAG,CAAE,CACD,CAAa,CAAC,CAAa,CAAC,GAAf,CAAmB,CAAnB,CADZ,CAED,CAAa,CAAC,CAAa,CAAC,QAAf,CAAwB,CAAxB,CAFZ,CAGD,CAAa,CAAC,CAAa,CAAC,OAAf,CAAuB,CAAvB,CAHZ,CAZc,CAAvB,CAmBA;AACA,qBACA,GAAI,CAAA,CAAa,CAAG,IAApB,CACA,KAAM,CAAA,CAAO,CACT,WAAW,CAAC,CAAD,CAAc,CAAd,CAA8B,CACrC,KAAK,OAAL,CAAe,KAAK,mBAAL,CAAyB,CAAzB,CAAsC,CAAtC,CAClB,CAED,GAAG,EAAG,CACE,CAAa,GAAK,IADpB,GAEE,CAAa,CAAG,IAFlB,CAGE,CAAE,CAAC,UAAH,CAAc,KAAK,OAAnB,CAHF,CAKL,CAED,mBAAmB,CAAC,CAAD,CAAc,CAAd,CAA8B,MACvC,CAAA,CAAY,CAAG,KAAK,YAAL,CAAkB,CAAE,CAAC,aAArB,CAAmC,CAAnC,CADwB,CAEvC,CAAc,CAAG,KAAK,YAAL,CAAkB,CAAE,CAAC,eAArB,CAAqC,CAArC,CAFsB,CAGvC,CAAO,CAAG,CAAE,CAAC,aAAH,EAH6B,CAQ7C,GAJA,CAAE,CAAC,YAAH,CAAgB,CAAhB,CAAwB,CAAxB,CAIA,CAHA,CAAE,CAAC,YAAH,CAAgB,CAAhB,CAAwB,CAAxB,CAGA,CAFA,CAAE,CAAC,WAAH,CAAe,CAAf,CAEA,CAAI,CAAE,CAAC,mBAAH,CAAuB,CAAvB,CAA+B,CAAE,CAAC,WAAlC,CAAJ,CACI;AACA,MAAO,CAAA,CAAP,CAFJ,IAGO,CACH;AACA,KAAM,CAAA,CAAK,CAAG,CAAE,CAAC,iBAAH,CAAqB,CAArB,CAAd,CAEA,KADA,CAAA,CAAE,CAAC,aAAH,CAAiB,CAAjB,CACA,CAAM,GAAI,CAAA,KAAJ,CAAW,kCAAiC,CAAM,EAAlD,CACT,CACJ,CAED,YAAY,CAAC,CAAD,CAAM,CAAN,CAAc,CACtB,KAAM,CAAA,CAAM,CAAG,CAAE,CAAC,YAAH,CAAgB,CAAhB,CAAf,CAGA,GAFA,CAAE,CAAC,YAAH,CAAgB,CAAhB,CAAuB,CAAvB,CAEA,CADA,CAAE,CAAC,aAAH,CAAiB,CAAjB,CACA,CAAI,CAAE,CAAC,kBAAH,CAAsB,CAAtB,CAA6B,CAAE,CAAC,cAAhC,CAAJ,CACI;AACA,MAAO,CAAA,CAAP,CAFJ,IAGO,CACH;AACA,KAAM,CAAA,CAAK,CAAG,CAAE,CAAC,gBAAH,CAAoB,CAApB,CAAd,CAEA,KADA,CAAA,CAAE,CAAC,YAAH,CAAgB,CAAhB,CACA,CAAM,GAAI,CAAA,KAAJ,CAAW,6BAA4B,CAAM,EAA7C,CACT,CACJ,CA5CQ,CA6Jb;AAhlBS,KAklBH,CAAA,CAAe,CAvErB,UAA+B,CAC3B,KAAM,CAAA,CAAM,CAAG,GAAI,CAAA,CAAJ,CAAW,CAAe,CAAC,MAA3B,CAAkC,CAAe,CAAC,QAAlD,CAAf,CAgBA,MAfA,CAAA,CAAM,CAAC,iBAAP,CAA2B,CAAE,CAAC,iBAAH,CAAqB,CAAM,CAAC,OAA5B,CAAoC,YAApC,CAe3B,CAdA,CAAM,CAAC,cAAP,CAAwB,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,kBAArC,CAcxB,CAbA,CAAM,CAAC,YAAP,CAAsB,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,SAArC,CAatB,CAXA,CAAM,CAAC,MAAP,CAAgB,CAAE,CAAC,YAAH,EAWhB,CAVA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,YAAjB,CAA8B,CAAM,CAAC,MAArC,CAUA,CATA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,YAAjB,CAA8B,GAAI,CAAA,YAAJ,CAAiB,CAAC,CAAD,CAAG,CAAH,CAAM,EAAN,CAAU,EAAV,CAAjB,CAA9B,CAA+D,CAAE,CAAC,YAAlE,CASA,CAPA,CAAE,CAAC,uBAAH,CAA2B,CAAM,CAAC,iBAAlC,CAOA,CANA,CAAE,CAAC,mBAAH,CAAuB,CAAM,CAAC,iBAA9B,CAAgD,CAAhD,CAAkD,CAAE,CAAC,KAArD,IAAiE,CAAjE,CAAmE,CAAnE,CAMA,CAHA,CAAM,CAAC,GAAP,EAGA,CAFA,CAAE,CAAC,gBAAH,CAAoB,CAAM,CAAC,cAA3B,IAAgD,CAAM,CAAC,UAAvD,CAEA,CAAO,CACV,CAqDuB,EAllBf,CAmlBH,CAAU,CApDhB,UAA0B,CACtB,KAAM,CAAA,CAAM,CAAG,CAAe,CAAC,CAAD,CAA9B,CA6CA,MA5CA,CAAA,CAAM,CAAC,GAAP,EA4CA,CAxCA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,mBAArC,CAAd,CAAwE,CAAc,CAAC,OAAf,CAAuB,CAAvB,CAAxE,CAwCA,CAvCA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,wBAArC,CAAd,CAA6E,CAAc,CAAC,OAAf,CAAuB,CAAvB,CAA7E,CAuCA,CAtCA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,uBAArC,CAAd,CAA4E,CAAc,CAAC,OAAf,CAAuB,CAAvB,CAA5E,CAsCA,CApCA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,qBAArC,CAAd,CAA0E,CAAc,CAAC,SAAf,CAAyB,CAAzB,CAA1E,CAoCA,CAnCA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,0BAArC,CAAd,CAA+E,CAAc,CAAC,SAAf,CAAyB,CAAzB,CAA/E,CAmCA,CAlCA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,yBAArC,CAAd,CAA8E,CAAc,CAAC,SAAf,CAAyB,CAAzB,CAA9E,CAkCA,CAhCA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,eAArC,CAAd,CAAoE,CAAc,CAAC,GAAf,CAAmB,CAAnB,CAApE,CAgCA,CA/BA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,oBAArC,CAAd,CAAyE,CAAc,CAAC,GAAf,CAAmB,CAAnB,CAAzE,CA+BA,CA9BA,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,mBAArC,CAAd,CAAwE,CAAc,CAAC,GAAf,CAAmB,CAAnB,CAAxE,CA8BA,CA3BA,CAAM,CAAC,cAAP,CAAwB,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,WAArC,CA2BxB,CA1BA,CAAM,CAAC,mBAAP,CAA6B,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,gBAArC,CA0B7B,CAzBA,CAAM,CAAC,kBAAP,CAA4B,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,eAArC,CAyB5B,CAvBA,CAAM,CAAC,gBAAP,CAA0B,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,aAArC,CAuB1B,CAtBA,CAAM,CAAC,qBAAP,CAA+B,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,kBAArC,CAsB/B,CArBA,CAAM,CAAC,oBAAP,CAA8B,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,iBAArC,CAqB9B,CAnBA,CAAM,CAAC,UAAP,CAAoB,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,OAArC,CAmBpB,CAlBA,CAAM,CAAC,eAAP,CAAyB,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,YAArC,CAkBzB,CAjBA,CAAM,CAAC,cAAP,CAAwB,CAAE,CAAC,kBAAH,CAAsB,CAAM,CAAC,OAA7B,CAAqC,WAArC,CAiBxB,CAdA,CAAM,CAAC,UAAP,CAAoB,SAAS,CAAT,CAAkB,CAClC,CAAE,CAAC,UAAH,CAAc,CAAM,CAAC,cAArB,CAAoC,CAAO,CAAC,OAAR,CAAgB,CAAhB,CAApC,CADkC,CAElC,CAAE,CAAC,UAAH,CAAc,CAAM,CAAC,mBAArB,CAAyC,CAAO,CAAC,OAAR,CAAgB,CAAhB,CAAzC,CAFkC,CAGlC,CAAE,CAAC,UAAH,CAAc,CAAM,CAAC,kBAArB,CAAwC,CAAO,CAAC,OAAR,CAAgB,CAAhB,CAAxC,CAHkC,CAKlC,CAAE,CAAC,UAAH,CAAc,CAAM,CAAC,gBAArB,CAAsC,CAAO,CAAC,SAAR,CAAkB,CAAlB,CAAtC,CALkC,CAMlC,CAAE,CAAC,UAAH,CAAc,CAAM,CAAC,qBAArB,CAA2C,CAAO,CAAC,SAAR,CAAkB,CAAlB,CAA3C,CANkC,CAOlC,CAAE,CAAC,UAAH,CAAc,CAAM,CAAC,oBAArB,CAA0C,CAAO,CAAC,SAAR,CAAkB,CAAlB,CAA1C,CAPkC,CASlC,CAAE,CAAC,UAAH,CAAc,CAAM,CAAC,UAArB,CAAgC,CAAO,CAAC,GAAR,CAAY,CAAZ,CAAhC,CATkC,CAUlC,CAAE,CAAC,UAAH,CAAc,CAAM,CAAC,eAArB,CAAqC,CAAO,CAAC,GAAR,CAAY,CAAZ,CAArC,CAVkC,CAWlC,CAAE,CAAC,UAAH,CAAc,CAAM,CAAC,cAArB,CAAoC,CAAO,CAAC,GAAR,CAAY,CAAZ,CAApC,CACH,CAED,CAAO,CACV,CAKkB,EAnlBV,CAolBH,CAAW,CAAG,CAAe,CA3hBjB,CAClB,MAAM,CAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAbsB,CAelB,QAAQ,CAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAzBsB,CA2hBiB,CAplB1B,CAknBT,CAAE,CAAC,UAAH,CAAc,CAAd,CAAgB,CAAhB,CAAkB,CAAlB,CAAoB,CAApB,CAlnBS,CAmnBT,CAAE,CAAC,KAAH,CAAS,CAAE,CAAC,gBAAZ,CAnnBS,CAonBT,CAAE,CAAC,OAAH,CAAW,CAAE,CAAC,UAAd,CApnBS,CAqnBT,CAAE,CAAC,MAAH,CAAU,CAAE,CAAC,KAAb,CArnBS,CAsnBT,CAAE,CAAC,SAAH,CAAa,CAAE,CAAC,SAAhB,CAA0B,CAAE,CAAC,mBAA7B,CAtnBS,CAwnBT;AACA,KAAM,CAAA,CAAW,CAAG,CAAE,CAAC,aAAH,EAApB,CACA,CAAE,CAAC,WAAH,CAAe,CAAE,CAAC,UAAlB,CAA6B,CAA7B,CA1nBS,CA2nBT,CAAE,CAAC,aAAH,CAAiB,CAAE,CAAC,UAApB,CAA+B,CAAE,CAAC,kBAAlC,CAAqD,CAAE,CAAC,OAAxD,CA3nBS,CA4nBT,CAAE,CAAC,aAAH,CAAiB,CAAE,CAAC,UAApB,CAA+B,CAAE,CAAC,kBAAlC,CAAqD,CAAE,CAAC,OAAxD,CA5nBS,CA6nBT,CAAE,CAAC,aAAH,CAAiB,CAAE,CAAC,UAApB,CAA+B,CAAE,CAAC,cAAlC,CAAiD,CAAE,CAAC,aAApD,CA7nBS,CA8nBT,CAAE,CAAC,aAAH,CAAiB,CAAE,CAAC,UAApB,CAA+B,CAAE,CAAC,cAAlC,CAAiD,CAAE,CAAC,aAApD,CA9nBS,CA+nBT,CAAE,CAAC,UAAH,CAAc,CAAE,CAAC,UAAjB,CAA4B,CAA5B,CAA8B,CAAE,CAAC,IAAjC,CAAsC,CAAM,CAAC,KAA7C,CAAmD,CAAM,CAAC,MAA1D,CAAiE,CAAjE,CAAmE,CAAE,CAAC,IAAtE,CAA2E,CAAE,CAAC,aAA9E,CAA4F,IAA5F,CA/nBS,MAgoBH,CAAA,CAAyB,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAC,CAAd,CAAiB,CAAjB,CAAoB,CAAC,CAArB,CAAwB,CAAxB,CAA2B,CAA3B,CAhoBzB,CAioBH,CAAyB,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAC,CAAd,CAAiB,CAAjB,CAAoB,CAApB,CAAuB,CAAvB,CAA0B,CAA1B,CAjoBzB,CAkoBT,GAAI,CAAA,CAAgB,CAAG,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAAO,CAAP,CAAvB,CAEA;AACA,KAAM,CAAA,CAAW,CAAG,CAAE,CAAC,iBAAH,EAApB,CACA,CAAE,CAAC,eAAH,CAAmB,CAAE,CAAC,WAAtB,CAAkC,CAAlC,CAtoBS,CAuoBT,CAAE,CAAC,oBAAH,CAAwB,CAAE,CAAC,WAA3B,CAAuC,CAAE,CAAC,iBAA1C,CAA4D,CAAE,CAAC,UAA/D,CAA0E,CAA1E,CAAsF,CAAtF,CAvoBS,CAorBT,KAAM,CAAA,CAAM,CACR,WAAW,CAAC,CAAD,CAAG,CAAH,CAAM,CACb,KAAK,MAAL,CAAc,IADD,CAEb,KAAK,QAAL,CAAgB,EAFH,CAIb,KAAK,CAAL,CAAS,CAJI,CAKb,KAAK,CAAL,CAAS,CALI,CAMb,KAAK,MAAL,CAAc,IAND,CAQb,KAAK,MAAL,GAOH,CAED,QAAQ,EAAG,CAAE;AACT,KAAM,CAAA,CAAG,CAAG,GAAI,CAAA,CAAhB,CACA,KAAK,QAAL,CAAc,IAAd,CAAmB,CAAnB,CAFO,CAGP,CAAG,CAAC,MAAJ,CAAa,IAChB,CAED,IAAI,EAAG,CACH;AACA,IAAK,KAAM,CAAA,CAAX,GAAoB,MAAK,QAAzB,CACI,KAAK,QAAL,CAAc,CAAd,EAAqB,IAArB,EAEP,CAED;AA/BQ,CAkCZ;AACA,KAAM,CAAA,CAAN,QAAwB,CAAA,CAAM,CAC1B,WAAW,CAAC,CAAD,CAAG,CAAH,CAAM,CACb,MAAM,CAAN,CAAQ,CAAR,CACH,CACD;AAJ0B,CAM9B;AAEA,KAAM,CAAA,CAAQ,CACV,WAAW,CAAC,CAAD,CAAM,CAAN,CAAc,CAAd,CAA0B,CACjC;AAOA,2BARiC,CAUjC,yBAViC,CAajC;AAEA;AAQwB;AACA;AACA;AACA;AACA;AAzBxB,KAAK,IAAL,CAAY,CAFqB,CAGjC,KAAK,OAAL,CAAe,CAHkB,CAKjC,KAAK,KAAL,CAAa,CALoB,CAMjC,KAAK,EAAL,CAAU,CANuB,CASjC,KAAK,KAAL,CAAa,CAToB,CAWjC,KAAK,WAAL,CAAmB,KAAK,KAAL,CAAW,CAAX,GAAiB,IAXH,CAcjC,KAAK,QAAL,CAAgB,EAdiB,CAgBjC,KAAK,MAAL,CAAc,EAhBmB,CAkBjC,KAAK,EAAL,CAAU,EAlBuB,CAmBjC,KAAK,KAAL,CAAa,EAnBoB,CAoBjC,KAAK,IAAL,CAAY,EApBqB,CAqBjC,KAAK,OAAL,CAAe,EArBkB,CAuBjC,KAAK,OAAL,CAAe,EAvBkB,CAwBjC,KAAK,QAAL,CAAgB,EAxBiB,CAyBjC,KAAK,SAAL,CAAiB,EAzBgB,CA0BjC,KAAK,IAAL,CAAY,EA1BqB,CA2BjC,KAAK,QAAL,CAAgB,EA3BiB,CA4BjC,KAAK,QAAL,CAAgB,EAEnB,CAED;AAjCU,CAoCd;AACA;AACA;AAEA,GAAI,CAAA,CAAM,CAAG,CACX,CACE,KAAQ,WADV,CAEE,MAAS,GAFX,CAGE,OAAU,EAHZ,CAIE,OAAU,CACR,CACE,EAAK,CADP,CAEE,EAAK,CAFP,CADQ,CAJZ,CADW,CAYX,CACE,KAAQ,WADV,CAEE,MAAS,EAFX,CAGE,OAAU,GAHZ,CAIE,OAAU,CACR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CADQ,CAJZ,CAZW,CAuBX,CACE,KAAQ,QADV,CAEE,MAAS,EAFX,CAGE,OAAU,EAHZ,CAIE,OAAU,CACR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CADQ,CAKR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CALQ,CASR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CATQ,CAaR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CAbQ,CAiBR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CAjBQ,CAqBR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CArBQ,CAyBR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CAzBQ,CA6BR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CA7BQ,CAiCR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CAjCQ,CAqCR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CArCQ,CAyCR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CAzCQ,CA6CR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CA7CQ,CAJZ,CAvBW,CA8EX,CACE,KAAQ,MADV,CAEE,MAAS,EAFX,CAGE,OAAU,EAHZ,CAIE,OAAU,CACR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CADQ,CAKR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CALQ,CASR,CACE,EAAK,GADP,CAEE,EAAK,CAFP,CATQ,CAaR,CACE,EAAK,IADP,CAEE,EAAK,CAFP,CAbQ,CAJZ,CA9EW,CAqGX,CACE,KAAQ,eADV,CAEE,MAAS,EAFX,CAGE,OAAU,EAHZ,CAIE,OAAU,CACR,CACE,EAAK,IADP,CAEE,EAAK,CAFP,CADQ,CAKR,CACE,EAAK,IADP,CAEE,EAAK,CAFP,CALQ,CASR,CACE,EAAK,IADP,CAEE,EAAK,CAFP,CATQ,CAaR,CACE,EAAK,IADP,CAEE,EAAK,CAFP,CAbQ,CAJZ,CArGW,CAAb,CA8HA,KAAM,CAAA,CAAO,CACT,WAAW,CAAC,CAAD,CAAM,CAAN,CAAY,CAAZ,CAAmB,CAAnB,CAA2B,CAClC,KAAK,IAAL,CAAY,CADsB,CAElC,KAAK,KAAL,CAAa,CAFqB,CAGlC,KAAK,MAAL,CAAc,CAHoB,CAIlC,KAAK,MAAL,CAAc,CAJoB,CAMlC,IAAK,GAEG,CAAA,CAFH,CAAI,CAAC,CAAG,CAAb,CAAgB,CAAC,CAAG,KAAK,MAAL,CAAY,MAAhC,CAAwC,CAAC,EAAzC,CACI;AACI,CAFR,CAEc,CAAM,CAAC,QAFrB,CAGI,CAAG,CAAG,CAAM,CAAC,WAAP,CAAmB,CAAnB,CAAwB,CAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAY,CAAM,CAAC,UAA3C,CAAuD,CAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAY,CAAM,CAAC,WAA1E,CAHV,CAII,CAAG,CAAG,CAAM,CAAC,OAAP,CAAe,CAAf,CAAoB,KAAK,KAAL,CAAW,CAAM,CAAC,UAAtC,CAAkD,KAAK,MAAL,CAAY,CAAM,CAAC,WAArE,CAJV,CAKI,KAAK,MAAL,CAAY,CAAZ,EAAe,aAAf,CAA+B,CAEtC,CAdQ,CAsEb,KAAM,CAAA,CAAG,CAAG,EAAZ,CACA,IAAK,GAAI,CAAA,CAAT,GAAkB,CAAA,CAAlB,CAA0B,CACtB,KAAM,CAAA,CAAM,CAAG,CAAM,CAAC,CAAD,CAArB,CACA,CAAG,CAAC,CAAM,CAAC,IAAR,CAAH,CAAmB,GAAI,CAAA,CAAJ,CAAW,CAAM,CAAC,IAAlB,CAAuB,CAAM,CAAC,KAA9B,CAAoC,CAAM,CAAC,MAA3C,CAAkD,CAAM,CAAC,MAAzD,CACtB,CAmCD,KAAM,CAAA,CAAN,QAAwB,CAAA,CAAM,CAC1B,WAAW,CAAC,CAAD,CAAG,CAAH,CAAY,CAGnB,sBAHmB,CASnB;AARA,MAAM,CAAN,CAAQ,IAAI,CAAZ,CADmB,CAInB,KAAK,OAAL,CAAe,CAJI,CAMnB,KAAK,KAAL,GANmB,CAOnB,KAAK,MAAL,GAPmB,CAUnB,KAAK,SAAL,CAAiB,CAVE,CAWnB,KAAK,SAAL,CAAiB,CAXE,CAYnB,KAAK,UAAL,CAAkB,CAAY,EACjC,CAED,IAAI,EAAG,CACH,MAAM,IAAN,EADG,CAGH,KAAK,UAAL,EAHG,CAIH,KAAK,IAAL,EACH,CAED,UAAU,EAAG,CAST;AAPK,KAAK,KAFD,GAGL,KAAK,CAAL,CAAS,CAAM,CAAC,KAAK,CAAN,CAAQ,GAAR,CAAY,GAAZ,CAAiB,CAAjB,CAHV,CAIU,GAAX,QAAK,CAJJ,GAKD,KAAK,KAAL,GALC,GAUT,KAAK,UAAL,EAVS,CAWc,CAAnB,OAAK,UAXA,GAYL,KAAK,SAAL,CAAiB,EAZZ,CAaL,KAAK,UAAL,CAAkB,CAAY,EAbzB,EAec,CAAnB,QAAK,SAfA,GAgBL,KAAK,SAAL,EAAkB,KAAK,SAhBlB,CAiBiB,CAAlB,OAAK,SAjBJ,GAkBD,KAAK,SAAL,CAAiB,CAlBhB,CAmBD,KAAK,SAAL,CAAiB,CAnBhB,EAsBZ,CAED,IAAI,EAAG,CACH;AAGA;AAOA;AATA,CAAc,CAAC,CAAG,CAAC,SAAL,CAAe,CAAf,CAAiB,KAAK,CAAtB,CAAwB,KAAK,CAA7B,CAA+B,KAAK,OAAL,CAAa,OAA5C,CAFX,CAKH,CAAG,CAAC,SAAJ,CAAgB,QALb,CAMH,CAAG,CAAC,YAAJ,CAAmB,KANhB,CAOH,CAAG,CAAC,IAAJ,CAAW,CAAM,CAAC,IAPf,CAQH,CAAG,CAAC,SAAJ,CAAgB,OARb,CASH,CAAG,CAAC,QAAJ,CAAa,KAAK,OAAL,CAAa,IAA1B,CAA+B,KAAK,CAAL,CAAO,EAAtC,CAAyC,KAAK,CAAL,CAAO,EAAhD,CAAmD,EAAnD,CATG,CAYH,CAAc,CAAC,CAAG,CAAC,IAAL,CAAU,KAAK,KAAL,CAAY,KAAK,SAAjB,CAA6B,CAAvC,CAAyC,KAAK,CAAL,CAAO,EAAhD,CAAmD,KAAK,CAAL,CAAO,EAA1D,CAA6D,KAAK,OAAL,CAAa,OAA1E,CAZX,CAcC,KAAK,OAAL,CAAa,WAdd,EAeC,CAAc,CAAC,CAAG,CAAC,MAAL,CAAY,KAAK,OAAL,CAAa,WAAb,CAAyB,KAArC,CAA2C,KAAK,CAAL,CAAO,EAAlD,CAAqD,KAAK,CAAL,CAAO,EAA5D,CAA+D,KAAK,OAAL,CAAa,OAA5E,CAErB,CAhEyB,CAl/BrB,KA0jCH,CAAA,CAAM,CAAG,CACX,GAAG,CAAE,CACD,IAAI,CAAE,KADL,CAED,KAAK,CAAE,CAFN,CADM,CAKX,MAAM,CAAE,CACJ,IAAI,CAAE,QADF,CAEJ,KAAK,CAAE,CAFH,CALG,CASX,MAAM,CAAE,CACJ,IAAI,CAAE,QADF,CAEJ,KAAK,CAAE,CAFH,CATG,CAaX,KAAK,CAAE,CACH,IAAI,CAAE,OADH,CAEH,KAAK,CAAE,CAFJ,CAbI,CAiBX,MAAM,CAAE,CACJ,IAAI,CAAE,QADF,CAEJ,KAAK,CAAE,CAFH,CAjBG,CAqBX,IAAI,CAAE,CACF,IAAI,CAAE,MADJ,CAEF,KAAK,CAAE,CAFL,CArBK,CAyBX,IAAI,CAAE,CACF,IAAI,CAAE,MADJ,CAEF,KAAK,CAAE,CAFL,CAzBK,CA6BX,KAAK,CAAE,CACH,IAAI,CAAE,OADH,CAEH,KAAK,CAAE,CAFJ,CA7BI,CAiCX,IAAI,CAAE,CACF,IAAI,CAAE,MADJ,CAEF,KAAK,CAAE,CAFL,CAjCK,CAqCX,MAAM,CAAE,CACJ,IAAI,CAAE,QADF,CAEJ,KAAK,CAAE,CAFH,CArCG,CAyCX,GAAG,CAAE,CACD,IAAI,CAAE,KADL,CAED,KAAK,CAAE,EAFN,CAzCM,CA6CX,MAAM,CAAE,CACJ,IAAI,CAAE,QADF,CAEJ,KAAK,CAAE,EAFH,CAIR;AACA;AAlDW,CA1jCN,CA+mCH,CAAM,CAAG,GAAI,WAAW,CAC1B,KAAK,IAAL,CAAY,UAAW,CACnB;AACA,KAAK,MAAL,GAFmB,CAGnB,KAAK,MAAL,CAAc,EAHK,CAInB,KAAK,OAAL,CAAe,EAJI,CAKnB,KAAK,MAAL,CAAc,CACV,SAAS,CAAE,IADD,CAEV,UAAU,CAAE,EAFF,CAGV,WAAW,CAAE,EAHH,CAMjB,CAXW,CAWV,IAXU,CAWL,IAXK,CADc,CAc1B,KAAK,KAAL,CAAa,SAAS,CAAT,CAA0B,CAA1B,CAA6C,CAEtD,KAAK,MAAL,GAFsD,CAGtD,KAAK,MAAL,CAAc,CAHwC,CAItD,KAAK,OAAL,CAAe,CAJuC,CAKtD,KAAK,MAAL,CAAY,SAAZ,CAAwB,GAAI,CAAA,CAAJ,CAAc,EAAd,CAAiB,CAAjB,CAL8B,CAOtD,IAAK,GAAI,CAAA,CAAC,CAAG,CAAb,CAAgB,CAAC,CAAG,KAAK,MAAL,CAAY,MAAhC,CAAwC,CAAC,EAAzC,CACI,KAAK,MAAL,CAAY,UAAZ,CAAuB,CAAvB,EAA4B,GAAI,CAAA,CAAJ,CAAc,GAAG,CAAjB,CAAmB,KAAK,MAAL,CAAY,CAAZ,CAAnB,CAEnC,CAVY,CAUX,IAVW,CAUN,IAVM,CAda,CA0B1B,KAAK,GAAL,CAAW,UAAW,CAClB;AACA,KAAK,MAAL,GAFkB,CAGlB,KAAK,IAAL,CAAU,EAAV,CAAa,EAAb,CAEH,CALU,CAKT,IALS,CAKJ,IALI,CA1Be,CAiC1B,KAAK,IAAL,CAAY,UAAW,CACnB,GAAI,KAAK,MAAT,CACI;AACA,IAAK,KAAM,CAAA,CAAX,GAAoB,MAAK,MAAL,CAAY,UAAhC,CACI,KAAK,MAAL,CAAY,UAAZ,CAAuB,CAAvB,EAA8B,IAA9B,EAGX,CAPW,CAOV,IAPU,CAOL,IAPK,CAQf,CAxpCQ,CAypCT,CAAM,CAAC,IAAP,EAzpCS,CA4pCT,CAAM,CAAC,KAAP,CAAa,CACT,GAAI,CAAA,CAAJ,CAAY,MAAZ,CAAmB,CAAQ,CAAC,IAA5B,CAAiC,CAAE,CAAM,CAAC,GAAT,CAAjC,CADS,CAET,GAAI,CAAA,CAAJ,CAAY,MAAZ,CAAmB,CAAQ,CAAC,IAA5B,CAAiC,CAAE,CAAM,CAAC,MAAT,CAAjC,CAFS,CAGT,GAAI,CAAA,CAAJ,CAAY,MAAZ,CAAmB,CAAQ,CAAC,IAA5B,CAAiC,CAAE,CAAM,CAAC,IAAT,CAAjC,CAHS,CAIT,GAAI,CAAA,CAAJ,CAAY,QAAZ,CAAqB,CAAQ,CAAC,MAA9B,CAAqC,CAAE,CAAM,CAAC,MAAT,CAArC,CAJS,CAKT,GAAI,CAAA,CAAJ,CAAY,MAAZ,CAAmB,CAAQ,CAAC,IAA5B,CAAiC,CAAE,CAAM,CAAC,MAAT,CAAjC,CALS,CAMT,GAAI,CAAA,CAAJ,CAAY,QAAZ,CAAqB,CAAQ,CAAC,MAA9B,CAAqC,CAAE,CAAM,CAAC,KAAT,CAArC,CANS,CAAb,CA5pCS,CAqqCT;AACJ;AACA;AACA;AACA,MAEI,KAAM,CAAA,CAAK,CAAG,GAAI,WAAW,CAYzB;AAKA;AAKA;AAkBA;AACR;AACA;AACA;AACA;AACA;AACA;AACA,WA/CiC,CAuDzB;AACR;AACA,WAxDQ,KAAK,EAAL,CAAU,CACN,IAAI,CAAE,CADA,CAEN,MAAM,CAAE,CAFF,CAGN,KAAK,CAAE,CAHD,CAIN,IAAI,CAAE,CAJA,CAKN,OAAO,CAAE,CALH,CADe,CASzB,KAAK,MAAL,CAAc,CATW,CAUzB,KAAK,MAAL,CAAc,CAVW,CAazB,KAAK,YAAL,QAbyB,CAczB,KAAK,SAAL,QAdyB,CAezB,KAAK,aAAL,QAfyB,CAkBzB,KAAK,YAAL,CAAkB,IAAlB,IAlByB,CAmBzB,KAAK,SAAL,CAAe,IAAf,IAnByB,CAoBzB,KAAK,aAAL,CAAmB,IAAnB,IApByB,CAuBzB,CAAO,CAAC,gBAAR,CAAyB,WAAzB,CAAqC,SAAS,CAAT,CAAa,CAC9C,KAAK,MAAL,CAAc,EAAW,CAAE,CAAC,OAAH,CAAW,CAAtB,CADgC,CAE9C,KAAK,MAAL,CAAc,EAAW,CAAE,CAAC,OAAH,CAAW,CAAtB,CACjB,CAHoC,CAGnC,IAHmC,CAG9B,IAH8B,CAArC,CAvByB,CA2BzB,CAAO,CAAC,gBAAR,CAAyB,WAAzB,CAAqC,SAAS,CAAT,CAAa,CAC9C,KAAK,YAAL,CAAkB,CAAE,CAAC,MAArB,IAD8C,CAE9C,KAAK,SAAL,CAAe,CAAE,CAAC,MAAlB,IACH,CAHoC,CAGnC,IAHmC,CAG9B,IAH8B,CAArC,CA3ByB,CA+BzB,CAAO,CAAC,gBAAR,CAAyB,SAAzB,CAAmC,SAAS,CAAT,CAAa,CAC5C,KAAK,aAAL,CAAmB,CAAE,CAAC,MAAtB,IAD4C,CAE5C,KAAK,SAAL,CAAe,CAAE,CAAC,MAAlB,IACH,CAHkC,CAGjC,IAHiC,CAG5B,IAH4B,CAAnC,CA/ByB,CAmCzB,CAAO,CAAC,gBAAR,CAAyB,aAAzB,CAAuC,SAAS,CAAT,CAAa,CAChD;AACA,CAAE,CAAC,cAAH,EACH,CAHD,CAnCyB,CAgDzB,KAAK,WAAL,CAAmB,SAAS,CAAT,CAAY,CAAZ,CAAe,CAAf,CAAkB,CAAlB,CAAsB,UACjC,KAAK,MAAL,EAAe,CAAf,EAAqB,KAAK,MAAL,CAAc,CAAnC,EAAyC,KAAK,MAAL,EAAe,CAAxD,EAA8D,KAAK,MAAL,CAAc,CAD3C,CAKxC,CALkB,CAKjB,IALiB,CAKZ,IALY,CAhDM,CA0DzB,KAAK,KAAL,CAAa,UAAW,CACpB,KAAK,YAAL,CAAkB,IAAlB,IADoB,CAEpB,KAAK,aAAL,CAAmB,IAAnB,IAGH,CALY,CAKX,IALW,CAKN,IALM,CAMhB,CAhED,CAuGA,GAAI,CAAA,CAAO,CAAG,IAAd,CACA,CAAC,SAAY,CAET;AACA,CAAO,CAAG,KAAM,CAAA,CAAW,CAAC,oBAAD,CAHlB,CAKT,CAAI,EACP,CAND,GAQH,CA3xCA,G","file":"bionicle.js","sourcesContent":["(function () {\n    'use strict';\n\n    var config = {\r\n        font: '10px Yusei Magic',\r\n        width: 400,\r\n        height: 240,\r\n        atlasWidth: 2048,\r\n        atlasHeight: 2048\r\n    };\n\n    // Set up our document\r\n    const canvas = document.createElement('canvas');\r\n    const canvas2 = document.createElement('canvas');\r\n    document.body.appendChild(canvas);\r\n    document.body.appendChild(canvas2);\r\n    canvas.width = config.width;\r\n    canvas.height = config.height;\r\n    canvas2.width = config.width;\r\n    canvas2.height = config.height;\r\n\r\n    // Get GL Context\r\n    const gl = canvas.getContext('webgl',{\r\n        antialias: false\r\n    });\r\n    if (gl === null) {\r\n        throw new Error('Could not initialize WebGL!');\r\n    }\r\n\r\n    // Get 2D context\r\n    const ctx = canvas2.getContext('2d');\r\n    ctx.imageSmoothingEnabled = false;\r\n\r\n    // Resize canvas with the window\r\n    let scale = 1;\r\n    function resizeCanvas() {\r\n        if (window.innerWidth < window.innerHeight) {\r\n            scale = window.innerWidth/config.width;\r\n        } else {\r\n            scale = window.innerHeight/config.height;\r\n        }\r\n\r\n        // Option here: fill screen (stretch pixels) or keep to scale (fill or overflow)\r\n        scale = Math.max(Math.floor(scale),1);\r\n        canvas.width = config.width*scale;\r\n        canvas.height = config.height*scale;\r\n        canvas2.width = canvas.width;\r\n        canvas2.height = canvas.height;\r\n\r\n        ctx.imageSmoothingEnabled = false;\r\n        ctx.setTransform(1,0,0,1,0,0); // Reset scale\r\n        ctx.scale(scale,scale);\r\n    }\r\n    resizeCanvas();\r\n    window.addEventListener('resize',resizeCanvas);\r\n    window.addEventListener('orientationchange',resizeCanvas);\n\n    var ImageSource = {\r\n    vertex:`\r\nattribute vec2 a_position;\r\nattribute vec2 a_texcoord;\r\n\r\nuniform mat3 u_positionMatrix;\r\nuniform mat3 u_texcoordMatrix;\r\n\r\nvarying vec2 v_texcoord;\r\n\r\nvoid main() {\r\n    gl_Position = vec4((u_positionMatrix*vec3(a_position,1)).xy,0,1);\r\n    v_texcoord = (u_texcoordMatrix*vec3(a_texcoord,1.0)).xy;\r\n}`,\r\n\r\n    fragment:`\r\nprecision mediump float;\r\n\r\nuniform sampler2D u_image;\r\nuniform vec4 u_blend;\r\n\r\nvarying vec2 v_texcoord;\r\n\r\nvoid main() {\r\n    gl_FragColor = texture2D(u_image,v_texcoord)*u_blend;\r\n}`\r\n    };\n\n    var PrimitiveSource = {\r\n    vertex:`\r\nattribute vec2 a_position;\r\n\r\nuniform mat3 u_positionMatrix;\r\n\r\nvoid main() {\r\n    gl_Position = vec4((u_positionMatrix*vec3(a_position,1)).xy,0,1);\r\n}`,\r\n\r\n    fragment:`\r\nprecision mediump float;\r\n\r\nuniform vec4 u_color;\r\n\r\nvoid main() {\r\n    gl_FragColor = u_color;\r\n}`\r\n    };\n\n    var SwapSource = {\r\n    vertex:`\r\n// No change from image shader here\r\nattribute vec2 a_position;\r\nattribute vec2 a_texcoord;\r\n\r\nuniform mat3 u_positionMatrix;\r\nuniform mat3 u_texcoordMatrix;\r\n\r\nvarying vec2 v_texcoord;\r\n\r\nvoid main() {\r\n    gl_Position = vec4((u_positionMatrix*vec3(a_position,1)).xy,0,1);\r\n    v_texcoord = (u_texcoordMatrix*vec3(a_texcoord,1.0)).xy;\r\n}`,\r\n\r\n    fragment: `\r\nprecision mediump float;\r\nuniform sampler2D u_image;                                  \r\nuniform vec4 u_blend;\r\n\r\n// Colors to swap\r\nuniform vec3 u_replacedPrimary;\r\nuniform vec3 u_replacedPrimaryLight;\r\nuniform vec3 u_replacedPrimaryDark;\r\nuniform vec3 u_replacedSecondary;\r\nuniform vec3 u_replacedSecondaryLight;\r\nuniform vec3 u_replacedSecondaryDark;\r\nuniform vec3 u_replacedEye;\r\nuniform vec3 u_replacedEyeLight;\r\nuniform vec3 u_replacedEyeDark;\r\n\r\n// What to swap to\r\nuniform vec3 u_primary;\r\nuniform vec3 u_primaryLight;\r\nuniform vec3 u_primaryDark;\r\nuniform vec3 u_secondary;\r\nuniform vec3 u_secondaryLight;\r\nuniform vec3 u_secondaryDark;\r\nuniform vec3 u_eye;\r\nuniform vec3 u_eyeLight;\r\nuniform vec3 u_eyeDark;\r\n\r\nvarying vec2 v_texcoord;\r\n\r\nvoid main() {\r\n    // Get current frag color from texture\r\n    vec4 color = texture2D(u_image,v_texcoord);\r\n\r\n    // If color equals a value to swap...\r\n    if (color.rgb == u_replacedPrimary) {\r\n        // Set it to the new replacement\r\n        color = vec4(u_primary.rgb,color.a);\r\n    } else if (color.rgb == u_replacedPrimaryLight) {\r\n        color = vec4(u_primaryLight.rgb,color.a);\r\n    } else if (color.rgb == u_replacedPrimaryDark) {\r\n        color = vec4(u_primaryDark.rgb,color.a);\r\n    } else if (color.rgb == u_replacedSecondary) {\r\n        color = vec4(u_secondary.rgb,color.a);\r\n    } else if (color.rgb == u_replacedSecondaryLight) {\r\n        color = vec4(u_secondaryLight.rgb,color.a);\r\n    } else if (color.rgb == u_replacedSecondaryDark) {\r\n        color = vec4(u_secondaryDark.rgb,color.a);\r\n    } else if (color.rgb == u_replacedEye) {\r\n        color = vec4(u_eye.rgb,color.a);\r\n    } else if (color.rgb == u_replacedEyeLight) {\r\n        color = vec4(u_eyeLight.rgb,color.a);\r\n    } else if (color.rgb == u_replacedEyeDark) {\r\n        color = vec4(u_eyeDark.rgb,color.a);\r\n    }\r\n\r\n    // Blend and set\r\n    gl_FragColor = color*u_blend;\r\n}`\r\n    };\n\n    const Matrix = {\r\n        /**\r\n         * Multiplies two 3x3 matrices together\r\n         * @param {number[]} a First matrix\r\n         * @param {number[]} b Second matrix\r\n         * @returns {number[]}\r\n         */\r\n        multiply: function(a, b) {\r\n            var a00 = a[0 * 3 + 0];\r\n            var a01 = a[0 * 3 + 1];\r\n            var a02 = a[0 * 3 + 2];\r\n            var a10 = a[1 * 3 + 0];\r\n            var a11 = a[1 * 3 + 1];\r\n            var a12 = a[1 * 3 + 2];\r\n            var a20 = a[2 * 3 + 0];\r\n            var a21 = a[2 * 3 + 1];\r\n            var a22 = a[2 * 3 + 2];\r\n\r\n            var b00 = b[0 * 3 + 0];\r\n            var b01 = b[0 * 3 + 1];\r\n            var b02 = b[0 * 3 + 2];\r\n            var b10 = b[1 * 3 + 0];\r\n            var b11 = b[1 * 3 + 1];\r\n            var b12 = b[1 * 3 + 2];\r\n            var b20 = b[2 * 3 + 0];\r\n            var b21 = b[2 * 3 + 1];\r\n            var b22 = b[2 * 3 + 2];\r\n         \r\n            return [\r\n              b00 * a00 + b01 * a10 + b02 * a20,\r\n              b00 * a01 + b01 * a11 + b02 * a21,\r\n              b00 * a02 + b01 * a12 + b02 * a22,\r\n              b10 * a00 + b11 * a10 + b12 * a20,\r\n              b10 * a01 + b11 * a11 + b12 * a21,\r\n              b10 * a02 + b11 * a12 + b12 * a22,\r\n              b20 * a00 + b21 * a10 + b22 * a20,\r\n              b20 * a01 + b21 * a11 + b22 * a21,\r\n              b20 * a02 + b21 * a12 + b22 * a22,\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Translates a matrix.\r\n         * @param {number[]} mat Matrix to translate\r\n         * @param {number} tx X-translation\r\n         * @param {number} ty Y-translation\r\n         * @returns {number[]}\r\n         */\r\n        translation: function(mat,tx,ty) {\r\n            return Matrix.multiply(mat,\r\n            [   1, 0, 0,\r\n                0, 1, 0,\r\n                tx, ty, 1\r\n            ]);\r\n        },\r\n        \r\n        /**\r\n         * Rotates a matrix.\r\n         * @param {number[]} mat Matrix to rotate\r\n         * @param {number} angleInRadians \r\n         * @returns {number[]}\r\n         */\r\n        rotation: function(mat,angleInRadians) {\r\n            var c = Math.cos(angleInRadians);\r\n            var s = Math.sin(angleInRadians);\r\n            return Matrix.multiply(mat,\r\n            [   c,-s, 0,\r\n                s, c, 0,\r\n                0, 0, 1\r\n            ]);\r\n        },\r\n        \r\n        /**\r\n         * Scales a matrix.\r\n         * @param {number[]} mat Matrix to scale\r\n         * @param {number} sx Scale factor X\r\n         * @param {number} sy Scale factor Y\r\n         * @returns {number[]}\r\n         */\r\n        scaling: function(mat,sx,sy) {\r\n            return Matrix.multiply(mat,\r\n            [   sx, 0, 0,\r\n                0, sy, 0,\r\n                0, 0, 1\r\n            ]);\r\n        },\r\n\r\n        projection: [\r\n            2/config.width, 0, 0,\r\n            0, -2/config.height, 0,\r\n            -1, 1, 1\r\n        ],\r\n\r\n        identity: [\r\n            1, 0, 0,\r\n            0, 1, 0,\r\n            0, 0, 1\r\n        ]\r\n    };\n\n    // Lego colors (to swap palettes)\r\n    const colors = {\r\n        red: 'c4281b',\r\n        darkPink: 'c470a0',\r\n        orange: 'da8540',\r\n        brown: '675237',\r\n        tan: 'd7c599',\r\n        black: '1b2a34',\r\n        green: '287f46',\r\n        darkGray: '6d6e6c',\r\n        white: 'd0d1d0',\r\n        mediumBlue: '6e99c9',\r\n        lightGray: 'a1a5a2',\r\n        blue: '0d69ab',\r\n        yellow: 'f5cd2f',\r\n        lime: 'a4bd46',\r\n        darkOrange: 'a05f34',\r\n        purple: '6b327b',\r\n        sandBlue: '74869c',\r\n        darkTurquoise: '008f9b',\r\n        metallicGold: 'dbac34',\r\n        metallicSilver: 'a9a5b4',\r\n        pearlLightGray: '9ca3a8',\r\n\r\n        // Use color names as they appear on bricklink\r\n        // This is a good reference: https://brickshelf.com/gallery/ebindex/MCW/is_colourchart.png\r\n    };\r\n\r\n    // Colors to feed into the swap shader - present on the atlas, these will be switched with palette colors\r\n    const replaceColors = {\r\n        // Change these if for some reason, you have to modify our default atlas and its colors\r\n        primary: 'b5b5b5',\r\n        primaryLight: 'e6e6e6',\r\n        primaryDark: '545454',\r\n        secondary: '2700ad',\r\n        secondaryLight: '734cfa',\r\n        secondaryDark: '12004b',\r\n        eye: 'ae0000',\r\n        eyeLight: 'fb4c4c',\r\n        eyeDark: '4b0000'\r\n    };\r\n\r\n    /**\r\n     * Returns an array of RGB values from a hex color, for use in a shader or as a blend.\r\n     * @param {string} hexString Six-character HTML color\r\n     * @param {number} factor A decimal to show how far to scale this color, must be between -1 and 1 though values around 0.2 work best\r\n     * @returns {number[]}\r\n     */\r\n    function getRGBfromHex(hexString,factor) {\r\n        let r = parseInt(hexString.slice(0,2),16) / 255;\r\n        let g = parseInt(hexString.slice(2,4),16) / 255;\r\n        let b = parseInt(hexString.slice(4,6),16) / 255;\r\n        if (factor) {\r\n            r = Math.max(0,Math.min(1,r+factor));\r\n            g = Math.max(0,Math.min(1,g+factor)),\r\n            b = Math.max(0,Math.min(1,b+factor));\r\n        }\r\n        return [r,g,b];\r\n    }\r\n\r\n    /**\r\n     * Creates a new nine-color palette given three base colors (for the primary, secondary, and eye) and three optional change factors to scale for lighter and darker versions of the colors.\r\n     * If change factors aren't provided, it defaults to 0.2.\r\n     * @constructor\r\n     * @param {string} primaryHex \r\n     * @param {string} secondaryHex \r\n     * @param {string} eyeHex \r\n     * @param {number} [primaryChangeFactor]\r\n     * @param {number} [secondaryChangeFactor]\r\n     * @param {number} [eyeChangeFactor]\r\n     */\r\n    function Palette(primaryHex,secondaryHex,eyeHex,primaryChangeFactor = 0.2,secondaryChangeFactor = 0.2,eyeChangeFactor = 0.2) {\r\n        // Each palette has three colors for three areas, nine colors total.\r\n        // Each area has a light area, medium area, and dark area to look like shadows\r\n        // These nine colors only replace the nine colors in our default swap.gpl palette\r\n\r\n        // Each palette has three arrays, each of which holds three arrays, each of which holds RGB from 0 to 1\r\n        this.primary = [\r\n            getRGBfromHex(primaryHex,0),\r\n            getRGBfromHex(primaryHex,primaryChangeFactor),\r\n            getRGBfromHex(primaryHex,-primaryChangeFactor)\r\n        ];\r\n        this.secondary = [\r\n            getRGBfromHex(secondaryHex,0),\r\n            getRGBfromHex(secondaryHex,secondaryChangeFactor),\r\n            getRGBfromHex(secondaryHex,-eyeChangeFactor)\r\n        ];\r\n        this.eye = [\r\n            getRGBfromHex(eyeHex,0),\r\n            getRGBfromHex(eyeHex,eyeChangeFactor),\r\n            getRGBfromHex(eyeHex,-eyeChangeFactor)\r\n        ];\r\n    }\r\n\r\n    const palettes = {\r\n        tahu: new Palette(colors.red,colors.orange,colors.darkPink),\r\n        pohatu: new Palette(colors.brown,colors.tan,colors.orange),\r\n        onua: new Palette(colors.black,colors.darkGray,colors.green),\r\n        kopaka: new Palette(colors.white,colors.lightGray,colors.mediumBlue),\r\n        gali: new Palette(colors.blue,colors.mediumBlue,colors.yellow),\r\n        lewa: new Palette(colors.green,colors.lime,colors.lime),\r\n        vakama: new Palette(colors.orange,colors.red,colors.darkPink),\r\n        onewa: new Palette(colors.tan,colors.brown,colors.orange),\r\n        whenua: new Palette(colors.darkGray,colors.black,colors.green),\r\n        nuju: new Palette(colors.lightGray,colors.white,colors.mediumBlue),\r\n        nokama: new Palette(colors.mediumBlue,colors.blue,colors.yellow),\r\n        matau: new Palette(colors.lime,colors.green,colors.lime),\r\n\r\n        // More palettes here!\r\n\r\n        // You can also use the Palette constructor to make them on the fly for randomly-generated matoran/rahi\r\n    };\r\n\r\n    // You can define more palettes that are based on others, like this\r\n\r\n    // Remember, for palettes that should only affect the mask, only use that palette on the mask.\r\n    // Each sprite has a different palette so it shouldn't also make your body gold.\r\n    palettes.tahu.gold = new Palette(colors.metallicGold,colors.orange,colors.darkPink,0.4);\r\n    palettes.tahu.silver = new Palette(colors.metallicSilver,colors.orange,colors.darkPink,0.4);\r\n    palettes.pohatu.gold = new Palette(colors.metallicGold,colors.tan,colors.orange,0.4);\r\n    palettes.pohatu.silver = new Palette(colors.metallicSilver,colors.tan,colors.orange,0.4);\r\n    palettes.onua.gold = new Palette(colors.metallicGold,colors.darkGray,colors.green,0.4);\r\n    palettes.onua.silver = new Palette(colors.metallicSilver,colors.darkGray,colors.green,0.4);\r\n    palettes.kopaka.gold = new Palette(colors.metallicGold,colors.lightGray,colors.mediumBlue,0.4);\r\n    palettes.kopaka.silver = new Palette(colors.metallicSilver,colors.lightGray,colors.mediumBlue,0.4);\r\n    palettes.gali.gold = new Palette(colors.metallicGold,colors.mediumBlue,colors.yellow,0.4);\r\n    palettes.gali.silver = new Palette(colors.metallicSilver,colors.mediumBlue,colors.yellow,0.4);\r\n    palettes.lewa.gold = new Palette(colors.metallicGold,colors.lime,colors.lime,0.4);\r\n    palettes.lewa.silver = new Palette(colors.metallicSilver,colors.lime,colors.lime,0.4);\r\n\r\n    // More extended palettes here\r\n\r\n    const replacePalette = {\r\n        // Can't use palette constructor because it doesn't let us set all nine colors manually\r\n        primary: [\r\n            getRGBfromHex(replaceColors.primary,0),\r\n            getRGBfromHex(replaceColors.primaryLight,0),\r\n            getRGBfromHex(replaceColors.primaryDark,0)\r\n        ],\r\n        secondary: [\r\n            getRGBfromHex(replaceColors.secondary,0),\r\n            getRGBfromHex(replaceColors.secondaryLight,0),\r\n            getRGBfromHex(replaceColors.secondaryDark,0)\r\n        ],\r\n        eye: [\r\n            getRGBfromHex(replaceColors.eye,0),\r\n            getRGBfromHex(replaceColors.eyeLight,0),\r\n            getRGBfromHex(replaceColors.eyeDark,0)\r\n        ]\r\n    };\n\n    // Shader class\r\n    /** @type {Shader} */\r\n    let currentShader = null;\r\n    class Shader {\r\n        constructor(vertexSource,fragmentSource) {\r\n            this.program = this.createShaderProgram(vertexSource,fragmentSource);\r\n        }\r\n\r\n        use() {\r\n            if (currentShader !== this) {\r\n                currentShader = this;\r\n                gl.useProgram(this.program);\r\n            }\r\n        }\r\n\r\n        createShaderProgram(vertexSource,fragmentSource) {\r\n            const vertexShader = this.createShader(gl.VERTEX_SHADER,vertexSource);\r\n            const fragmentShader = this.createShader(gl.FRAGMENT_SHADER,fragmentSource);\r\n            const program = gl.createProgram();\r\n            gl.attachShader(program,vertexShader);\r\n            gl.attachShader(program,fragmentShader);\r\n            gl.linkProgram(program);\r\n\r\n            if (gl.getProgramParameter(program,gl.LINK_STATUS)) {\r\n                // Success\r\n                return program;\r\n            } else {\r\n                // Failure\r\n                const error = gl.getProgramInfoLog(program);\r\n                gl.deleteProgram(program);\r\n                throw new Error(`Could not link shader program: ${error}`);\r\n            }\r\n        }\r\n\r\n        createShader(type,source) {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader,source);\r\n            gl.compileShader(shader);\r\n            if (gl.getShaderParameter(shader,gl.COMPILE_STATUS)) {\r\n                // Success\r\n                return shader;\r\n            } else {\r\n                // Failure\r\n                const error = gl.getShaderInfoLog(shader);\r\n                gl.deleteShader(shader);\r\n                throw new Error(`Could not compile shader: ${error}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    function makeImageShader(src) {\r\n        const shader = new Shader(src.vertex,src.fragment);\r\n        // Get attributes and uniforms\r\n        shader.positionAttribute = gl.getAttribLocation(shader.program,'a_position');\r\n        shader.textureAttribute = gl.getAttribLocation(shader.program,'a_texcoord');\r\n        shader.positionMatrix = gl.getUniformLocation(shader.program,'u_positionMatrix');\r\n        shader.textureMatrix = gl.getUniformLocation(shader.program,'u_texcoordMatrix');\r\n        shader.blendUniform = gl.getUniformLocation(shader.program,'u_blend');\r\n\r\n        // Put the same buffer data into each attribute\r\n        // This will not change, since each image is drawn the same way.\r\n        shader.buffer = gl.createBuffer();\r\n        const positionOrder = new Float32Array([\r\n            0, 0,  0, 1,  1, 1,\r\n            1, 1,  1, 0,  0, 0,\r\n        ]);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER,shader.buffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER,positionOrder,gl.STATIC_DRAW);\r\n\r\n        gl.enableVertexAttribArray(shader.positionAttribute);\r\n        gl.vertexAttribPointer(shader.positionAttribute,2,gl.FLOAT,false,0,0);\r\n\r\n        gl.enableVertexAttribArray(shader.textureAttribute);\r\n        gl.vertexAttribPointer(shader.textureAttribute,2,gl.FLOAT,false,0,0);\r\n\r\n        shader.use = function() {\r\n            // Override's class use function to reset properly\r\n            if (currentShader !== this) {\r\n                currentShader = this;\r\n                gl.useProgram(this.program);\r\n\r\n                // Reset proper attributes, in case we were last using the primitive shader\r\n                gl.bindBuffer(gl.ARRAY_BUFFER,shader.buffer);\r\n                gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(positionOrder),gl.STATIC_DRAW);\r\n                gl.vertexAttribPointer(primitiveShader.positionAttribute,2,gl.FLOAT,false,0,0);\r\n            }\r\n        };\r\n\r\n        return shader;\r\n    }\r\n\r\n    function makePrimitiveShader() {\r\n        const shader = new Shader(PrimitiveSource.vertex,PrimitiveSource.fragment);\r\n        shader.positionAttribute = gl.getAttribLocation(shader.program,'a_position');\r\n        shader.positionMatrix = gl.getUniformLocation(shader.program,'u_positionMatrix');\r\n        shader.colorUniform = gl.getUniformLocation(shader.program,'u_color');\r\n\r\n        shader.buffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER,shader.buffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER,new Float32Array([0,0, 0.5,0.5]),gl.DYNAMIC_DRAW);\r\n\r\n        gl.enableVertexAttribArray(shader.positionAttribute);\r\n        gl.vertexAttribPointer(shader.positionAttribute,2,gl.FLOAT,false,0,0);\r\n\r\n        // Set the position uniform once here. All the position does it change to clipspace\r\n        shader.use();\r\n        gl.uniformMatrix3fv(shader.positionMatrix,false,Matrix.projection);\r\n\r\n        return shader;\r\n    }\r\n\r\n    function makeSwapShader() {\r\n        const shader = makeImageShader(SwapSource);\r\n        shader.use();\r\n        // This is a bit nasty... but not as nasty as it was before\r\n\r\n        // Set the initial nine palette replace uniform colors\r\n        gl.uniform3fv(gl.getUniformLocation(shader.program,'u_replacedPrimary'),replacePalette.primary[0]);\r\n        gl.uniform3fv(gl.getUniformLocation(shader.program,'u_replacedPrimaryLight'),replacePalette.primary[1]);\r\n        gl.uniform3fv(gl.getUniformLocation(shader.program,'u_replacedPrimaryDark'),replacePalette.primary[2]);\r\n\r\n        gl.uniform3fv(gl.getUniformLocation(shader.program,'u_replacedSecondary'),replacePalette.secondary[0]);\r\n        gl.uniform3fv(gl.getUniformLocation(shader.program,'u_replacedSecondaryLight'),replacePalette.secondary[1]);\r\n        gl.uniform3fv(gl.getUniformLocation(shader.program,'u_replacedSecondaryDark'),replacePalette.secondary[2]);\r\n\r\n        gl.uniform3fv(gl.getUniformLocation(shader.program,'u_replacedEye'),replacePalette.eye[0]);\r\n        gl.uniform3fv(gl.getUniformLocation(shader.program,'u_replacedEyeLight'),replacePalette.eye[1]);\r\n        gl.uniform3fv(gl.getUniformLocation(shader.program,'u_replacedEyeDark'),replacePalette.eye[2]);\r\n\r\n        // Store swap color uniforms\r\n        shader.uniformPrimary = gl.getUniformLocation(shader.program,'u_primary');\r\n        shader.uniformPrimaryLight = gl.getUniformLocation(shader.program,'u_primaryLight');\r\n        shader.uniformPrimaryDark = gl.getUniformLocation(shader.program,'u_primaryDark');\r\n\r\n        shader.uniformSecondary = gl.getUniformLocation(shader.program,'u_secondary');\r\n        shader.uniformSecondaryLight = gl.getUniformLocation(shader.program,'u_secondaryLight');\r\n        shader.uniformSecondaryDark = gl.getUniformLocation(shader.program,'u_secondaryDark');\r\n\r\n        shader.uniformEye = gl.getUniformLocation(shader.program,'u_eye');\r\n        shader.uniformEyeLight = gl.getUniformLocation(shader.program,'u_eyeLight');\r\n        shader.uniformEyeDark = gl.getUniformLocation(shader.program,'u_eyeDark');\r\n\r\n        // Create our palette setting function on the shader\r\n        shader.setPalette = function(palette) {\r\n            gl.uniform3fv(shader.uniformPrimary,palette.primary[0]);\r\n            gl.uniform3fv(shader.uniformPrimaryLight,palette.primary[1]);\r\n            gl.uniform3fv(shader.uniformPrimaryDark,palette.primary[2]);\r\n\r\n            gl.uniform3fv(shader.uniformSecondary,palette.secondary[0]);\r\n            gl.uniform3fv(shader.uniformSecondaryLight,palette.secondary[1]);\r\n            gl.uniform3fv(shader.uniformSecondaryDark,palette.secondary[2]);\r\n            \r\n            gl.uniform3fv(shader.uniformEye,palette.eye[0]);\r\n            gl.uniform3fv(shader.uniformEyeLight,palette.eye[1]);\r\n            gl.uniform3fv(shader.uniformEyeDark,palette.eye[2]);\r\n        };\r\n\r\n        return shader;\r\n    }\r\n\r\n    // More shader make functions here\r\n\r\n    const primitiveShader = makePrimitiveShader();\r\n    const swapShader = makeSwapShader();\r\n    const imageShader = makeImageShader(ImageSource);\n\n    /**\r\n     * Asynchronously loads a new texture and configures it.\r\n     * @param {string} url \r\n     * @returns {WebGLTexture}\r\n     */\r\n    async function loadTexture(url) {\r\n        return new Promise(function(resolve,reject) {\r\n            const texture = gl.createTexture();\r\n            gl.bindTexture(gl.TEXTURE_2D,texture);\r\n            gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);\r\n\r\n            const image = new Image();\r\n            image.src = url;\r\n            image.addEventListener('load',function() {\r\n                gl.bindTexture(gl.TEXTURE_2D,texture);\r\n                gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,image);\r\n                resolve(texture);\r\n            });\r\n            image.addEventListener('error',function(err) {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    // Set up drawing\r\n    gl.clearColor(0,0,0,1);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n    // Set up game texture\r\n    const gameTexture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D,gameTexture);\r\n    gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);\r\n    gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,config.width,config.height,0,gl.RGBA,gl.UNSIGNED_BYTE,null);\r\n    const gameTexturePositionMatrix = [2, 0, 0, 0, -2, 0, -1, 1, 1];\r\n    const gameTextureIdentityMatrix = [1, 0, 0, 0, -1, 0, 0, 1, 1];\r\n    let gameTextureBlend = [1,1,1,1];\r\n\r\n    // Set up our framebuffer\r\n    const frameBuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER,frameBuffer);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,gameTexture,0);\r\n\r\n    /**\r\n     * Sets framebuffer and viewport for drawing to the game texture.\r\n     * @param {WebGLTexture} atlasTexture Texture to use as atlas for all further draw calls\r\n     */\r\n    function beginRender(atlasTexture) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER,frameBuffer);\r\n        gl.viewport(0,0,config.width,config.height);\r\n        gl.clearColor(0,0,0,1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        ctx.clearRect(0,0,config.width,config.height);\r\n        ctx.save();\r\n        gl.bindTexture(gl.TEXTURE_2D,atlasTexture);\r\n        imageShader.use();\r\n        gl.uniform4f(imageShader.blendUniform,1,1,1,1);\r\n    }\r\n\r\n    /**\r\n     * Draws what's on the game texture to the screen.\r\n     */\r\n    function drawGameTexture() {\r\n        // Switch to right framebuffer and texture\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER,null);\r\n        gl.viewport(0,0,canvas.width,canvas.height);\r\n        gl.clearColor(0,0,0,0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.bindTexture(gl.TEXTURE_2D,gameTexture);\r\n        \r\n        // Use the right shader and set our precalculated matrices\r\n        imageShader.use();\r\n\r\n        // Update our bound buffer to the correct type\r\n        gl.bindBuffer(gl.ARRAY_BUFFER,imageShader.buffer);\r\n        gl.enableVertexAttribArray(imageShader.positionAttribute);\r\n        gl.vertexAttribPointer(imageShader.positionAttribute,2,gl.FLOAT,false,0,0);\r\n\r\n        // Update uniforms and draw the arrays\r\n        gl.uniformMatrix3fv(imageShader.positionMatrix,false,gameTexturePositionMatrix);\r\n        gl.uniformMatrix3fv(imageShader.textureMatrix,false,gameTextureIdentityMatrix);\r\n        gl.uniform4fv(imageShader.blendUniform,gameTextureBlend);\r\n        gl.drawArrays(gl.TRIANGLES,0,6);\r\n        ctx.restore();\r\n    }\n\n    class Panel {\r\n        constructor(x,y) {\r\n            this.parent = null;\r\n            this.children = [];\r\n\r\n            this.x = x;\r\n            this.y = y;\r\n            this.sprite = null;\r\n\r\n            this.opened = false;\r\n\r\n            // Panels must be provided the following:\r\n            //      function to do each step\r\n            //      function to do when hovered/unhovered\r\n            //      function to do when clicked (left or right)\r\n            // ... or should CLICK functionality be applied to a button class?\r\n        }\r\n\r\n        addChild() { // Add coordinates to this function\r\n            const pan = new Panel();\r\n            this.children.push(pan);\r\n            pan.parent = this;\r\n        }\r\n\r\n        step() {\r\n            // Do our functions here?\r\n            for (const index in this.children) {\r\n                this.children[index].step();\r\n            }\r\n        }\r\n\r\n        // Interacting functions?\r\n    }\r\n\r\n    // Panel types\r\n    class Statusbar extends Panel {\r\n        constructor(x,y) {\r\n            super(x,y);\r\n        }\r\n        //...?\r\n    }\r\n    // Split the exports into multiple files if this becomes unwieldly\n\n    class Fighter {\r\n        constructor(name,palette,masksArray) {\r\n            // Initialze stats\r\n            this.name = name;\r\n            this.palette = palette;\r\n\r\n            this.level = 1;\r\n            this.xp = 0;\r\n\r\n            /** @type {KanohiMask[]} */\r\n            this.masks = masksArray;\r\n            /** @type {KanohiMask} */\r\n            this.currentMask = this.masks[0] || null;\r\n\r\n            // do @type element\r\n            this.elements = [];\r\n            // do @type status\r\n            this.status = [];\r\n\r\n            this.hp = 10;\r\n            this.maxhp = 10;\r\n            this.nova = 10;\r\n            this.maxnova = 10;\r\n\r\n            this.agility = 10;      // Evasion / speed\r\n            this.strength = 10;     // Damage dealt physically\r\n            this.toughness = 10;    // Damage resisted\r\n            this.mind = 10;         // Damage dealt w/ elements\r\n            this.accuracy = 10;     // Likelyhood to land hits\r\n            this.critical = 10;     // Likelyhood to land critical hits\r\n\r\n        }\r\n\r\n        // What methods?\r\n    }\r\n\r\n    // Later: figure out if this actually has to be a class\r\n    // And also figure out how the stats ought to be set per fighter\r\n    // Fighter generation functions? Pre-defined stat lists for toa or rahi? idk yet\n\n    var ATLAST = [\n      {\n        \"name\": \"statusbar\",\n        \"width\": 225,\n        \"height\": 64,\n        \"images\": [\n          {\n            \"x\": 0,\n            \"y\": 0\n          }\n        ]\n      },\n      {\n        \"name\": \"allyPanel\",\n        \"width\": 64,\n        \"height\": 160,\n        \"images\": [\n          {\n            \"x\": 240,\n            \"y\": 0\n          }\n        ]\n      },\n      {\n        \"name\": \"kanohi\",\n        \"width\": 40,\n        \"height\": 48,\n        \"images\": [\n          {\n            \"x\": 304,\n            \"y\": 0\n          },\n          {\n            \"x\": 352,\n            \"y\": 0\n          },\n          {\n            \"x\": 400,\n            \"y\": 0\n          },\n          {\n            \"x\": 448,\n            \"y\": 0\n          },\n          {\n            \"x\": 496,\n            \"y\": 0\n          },\n          {\n            \"x\": 544,\n            \"y\": 0\n          },\n          {\n            \"x\": 592,\n            \"y\": 0\n          },\n          {\n            \"x\": 640,\n            \"y\": 0\n          },\n          {\n            \"x\": 688,\n            \"y\": 0\n          },\n          {\n            \"x\": 736,\n            \"y\": 0\n          },\n          {\n            \"x\": 784,\n            \"y\": 0\n          },\n          {\n            \"x\": 832,\n            \"y\": 0\n          }\n        ]\n      },\n      {\n        \"name\": \"head\",\n        \"width\": 40,\n        \"height\": 40,\n        \"images\": [\n          {\n            \"x\": 880,\n            \"y\": 0\n          },\n          {\n            \"x\": 928,\n            \"y\": 0\n          },\n          {\n            \"x\": 976,\n            \"y\": 0\n          },\n          {\n            \"x\": 1024,\n            \"y\": 0\n          }\n        ]\n      },\n      {\n        \"name\": \"headSecondary\",\n        \"width\": 40,\n        \"height\": 40,\n        \"images\": [\n          {\n            \"x\": 1072,\n            \"y\": 0\n          },\n          {\n            \"x\": 1120,\n            \"y\": 0\n          },\n          {\n            \"x\": 1168,\n            \"y\": 0\n          },\n          {\n            \"x\": 1216,\n            \"y\": 0\n          }\n        ]\n      }\n    ];\n\n    class Sprite {\r\n        constructor(name,width,height,images) {\r\n            this.name = name;\r\n            this.width = width;\r\n            this.height = height;\r\n            this.images = images;\r\n\r\n            for (let i = 0; i < this.images.length; i++) {\r\n                // Generate texture matrices for each image\r\n                let mat = Matrix.identity;\r\n                mat = Matrix.translation(mat, images[i].x/config.atlasWidth, images[i].y/config.atlasHeight);\r\n                mat = Matrix.scaling(mat, this.width/config.atlasWidth, this.height/config.atlasHeight);\r\n                this.images[i].textureMatrix = mat;\r\n            }\r\n        }\r\n    }\r\n\r\n    function limitImage(spr,image) {\r\n        image = Math.floor(image);\r\n        if (!spr.images[image]) {\r\n            image -= spr.images.length;\r\n        }\r\n        return image;\r\n    }\r\n\r\n    /**\r\n     * Draws a sprite to the WebGL canvas, recolored by a given palette index.\r\n     * @param {Sprite} sprite Sprite resource to draw\r\n     * @param {number} image Image index of the sprite to draw\r\n     * @param {number} x Absolute x on canvas\r\n     * @param {number} y Absolute y on canvas\r\n     * @param {Palette} palette Palette to recolor the sprite to\r\n     * @param {number} a Alpha channel\r\n     * @param {number} [r] Red channel blend\r\n     * @param {number} [g] Green channel blend\r\n     * @param {number} [b] Blue channel blend\r\n     * @param {transformFnCallback} [transformFn] Callback to apply transformations to the position matrix\r\n     */\r\n    function drawSpriteSwap(sprite,image,x,y,palette,a = 1,r = 1,g = 1,b = 1,transformFn = null) {\r\n        swapShader.use();\r\n        image = limitImage(sprite,image);\r\n\r\n        // Set position matrix\r\n        let mat = Matrix.projection;\r\n        mat = Matrix.translation(mat,x,y);\r\n        mat = Matrix.scaling(mat,sprite.width,sprite.height);\r\n        \r\n        // Optional transformation\r\n        if (transformFn) {\r\n            mat = transformFn(mat);\r\n        }\r\n\r\n        gl.uniformMatrix3fv(swapShader.positionMatrix,false,mat);\r\n\r\n        // Set texture matrix\r\n        gl.uniformMatrix3fv(swapShader.textureMatrix,false,sprite.images[image].textureMatrix);\r\n\r\n        // Set blend\r\n        gl.uniform4f(swapShader.blendUniform,r,g,b,a);\r\n\r\n        // Set palette index\r\n        swapShader.setPalette(palette);\r\n\r\n        gl.drawArrays(gl.TRIANGLES,0,6);\r\n    }\r\n\r\n    // More sprite drawing goes here - functions with transformations build in\r\n    // Or even better: make a \"startDraw\" and an \"endDraw\" that allows you to apply whatever transformations you want.\r\n\r\n    // Load all sprites from our atlas map\r\n    const spr = {};\r\n    for (let index in ATLAST) {\r\n        const sprite = ATLAST[index];\r\n        spr[sprite.name] = new Sprite(sprite.name,sprite.width,sprite.height,sprite.images);\r\n    }\n\n    /**\r\n     * Linearly interpolate one value towards another by a factor of their difference.\r\n     * @param {number} a \r\n     * @param {number} b \r\n     * @param {number} factor \r\n     * @returns {number}\r\n     */\r\n    function lerp(a,b,factor) {\r\n        return a+(factor*(b-a));\r\n    }\r\n\r\n    /**\r\n     * Linearly interpolate one value towards another by a factor of their difference.\r\n     * After a threshold is passed, the values are set to be equal.\r\n     * @param {number} a \r\n     * @param {number} b \r\n     * @param {number} factor \r\n     * @param {number} [threshold] Difference at which the values are set to be equal\r\n     * @returns {number}\r\n     */\r\n    function lerpTo(a,b,factor,threshold = 0.1) {\r\n        if (a === b) {\r\n            return a;\r\n        }\r\n        a = lerp(a,b,factor);\r\n        if (Math.abs(a-b) < threshold) {\r\n            a = b;\r\n        }\r\n        return a;\r\n    }\n\n    // Open position: y = 80\r\n    // Closed position: y = 158\r\n    class AllyPanel extends Panel {\r\n        constructor(x,fighter) {\r\n            super(x,300+x);\r\n\r\n            /** @type {Fighter} */\r\n            this.fighter = fighter;\r\n            \r\n            this.ready = false;\r\n            this.opened = false;\r\n\r\n            // For effects\r\n            this.faceImage = 0;\r\n            this.faceSpeed = 0;\r\n            this.blinkTimer = getBlinkTime();\r\n        }\r\n\r\n        step() {\r\n            super.step();\r\n\r\n            this.effectStep();\r\n            this.draw();\r\n        }\r\n\r\n        effectStep() {\r\n            // Lerp onscreen\r\n            if (!this.ready) {\r\n                this.y = lerpTo(this.y,158,0.12,1);\r\n                if (this.y === 158) {\r\n                    this.ready = true;\r\n                }\r\n            }\r\n\r\n            // Blinking\r\n            this.blinkTimer--;\r\n            if (this.blinkTimer <= 0) {\r\n                this.faceSpeed = 0.2;\r\n                this.blinkTimer = getBlinkTime();\r\n            }\r\n            if (this.faceSpeed !== 0) {\r\n                this.faceImage += this.faceSpeed;\r\n                if (this.faceImage >= 4) {\r\n                    this.faceImage = 0;\r\n                    this.faceSpeed = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        draw() {\r\n            // Draw panel\r\n            drawSpriteSwap(spr.allyPanel,0,this.x,this.y,this.fighter.palette);\r\n\r\n            // Draw name\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'top';\r\n            ctx.font = config.font;\r\n            ctx.fillStyle = 'white';\r\n            ctx.fillText(this.fighter.name,this.x+32,this.y+61,50);\r\n\r\n            // Draw head\r\n            drawSpriteSwap(spr.head,this.ready? this.faceImage : 2,this.x+12,this.y+12,this.fighter.palette);\r\n            // Draw mask\r\n            if (this.fighter.currentMask) {\r\n                drawSpriteSwap(spr.kanohi,this.fighter.currentMask.image,this.x+12,this.y+12,this.fighter.palette);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getBlinkTime() {\r\n        return 15+Math.round(500*Math.random());\r\n    }\n\n    /** @type {KanohiMask[]} */\r\n    const Kanohi = {\r\n        hau: {\r\n            name: 'Hau',\r\n            image: 0,\r\n        },\r\n        kakama: {\r\n            name: 'Kakama',\r\n            image: 1,\r\n        },\r\n        pakari: {\r\n            name: 'Pakari',\r\n            image: 2,\r\n        },\r\n        akaku: {\r\n            name: 'Akaku',\r\n            image: 3,\r\n        },\r\n        kaukau: {\r\n            name: 'Kaukau',\r\n            image: 4,\r\n        },\r\n        miru: {\r\n            name: 'Miru',\r\n            image: 5,\r\n        },\r\n        huna: {\r\n            name: 'Huna',\r\n            image: 6,\r\n        },\r\n        komau: {\r\n            name: 'Komau',\r\n            image: 7,\r\n        },\r\n        ruru: {\r\n            name: 'Ruru',\r\n            image: 8,\r\n        },\r\n        matatu: {\r\n            name: 'Matatu',\r\n            image: 9,\r\n        },\r\n        rau: {\r\n            name: 'Rau',\r\n            image: 10,\r\n        },\r\n        mahiki: {\r\n            name: 'Mahiki',\r\n            image: 11,\r\n        },\r\n        // More masks?\r\n        // Don't forget to add new masks/properties to typedefs.js\r\n    };\n\n    const Battle = new function() {\r\n        this.init = function() {\r\n            // Init variables\r\n            this.active = false;\r\n            this.allies = [];\r\n            this.enemies = [];\r\n            this.panels = {\r\n                statusbar: null,\r\n                allyPanels: [],\r\n                enemyPanels: [],\r\n            };\r\n\r\n        }.bind(this);\r\n\r\n        this.begin = function(allyFighterArray,enemyFighterArray) {\r\n            // Set variables to default state when entering a battle\r\n            this.active = true;\r\n            this.allies = allyFighterArray; // Up to 6 toa\r\n            this.enemies = enemyFighterArray;\r\n            this.panels.statusbar = new Statusbar(80,0);\r\n\r\n            for (let i = 0; i < this.allies.length; i++) {\r\n                this.panels.allyPanels[i] = new AllyPanel(64*i,this.allies[i]);\r\n            }\r\n        }.bind(this);\r\n\r\n        this.end = function() {\r\n            // Set variables to inactive state\r\n            this.active = false;\r\n            this.init([],[]);\r\n\r\n        }.bind(this);\r\n\r\n        this.step = function() {\r\n            if (this.active) {\r\n                // Step for each panel\r\n                for (const index in this.panels.allyPanels) {\r\n                    this.panels.allyPanels[index].step();\r\n                }\r\n            }\r\n        }.bind(this);\r\n    };\r\n    Battle.init();\r\n\r\n    // For testing\r\n    Battle.begin([\r\n        new Fighter('Tahu',palettes.tahu,[ Kanohi.hau ]),\r\n        new Fighter('Gali',palettes.gali,[ Kanohi.kaukau ]),\r\n        new Fighter('Lewa',palettes.lewa,[ Kanohi.miru ]),\r\n        new Fighter('Pohatu',palettes.pohatu,[ Kanohi.kakama ]),\r\n        new Fighter('Onua',palettes.onua,[ Kanohi.pakari ]),\r\n        new Fighter('Kopaka',palettes.kopaka,[ Kanohi.akaku ]),\r\n    ]);\n\n    /*\r\n        To check mouse position: Input.mouseX and Input.mouseY\r\n        To check if mouse is over an area: Input.mouseWithin(...)\r\n        To check a button: Input.mousePressed[Input.mb.left], etc.\r\n    */\r\n\r\n    const Input = new function() {\r\n        this.mb = {\r\n            left: 0,\r\n            middle: 1,\r\n            right: 2,\r\n            back: 3,\r\n            forward: 4\r\n        };\r\n\r\n        this.mouseX = 0;\r\n        this.mouseY = 0;\r\n\r\n        // Mouse button arrays\r\n        this.mousePressed = new Array(5);\r\n        this.mouseHeld = new Array(5);\r\n        this.mouseReleased = new Array(5);\r\n\r\n        // Wipe\r\n        this.mousePressed.fill(false);\r\n        this.mouseHeld.fill(false);\r\n        this.mouseReleased.fill(false);\r\n\r\n        // Event listeners for input\r\n        canvas2.addEventListener('mousemove',function(ev) {\r\n            this.mouseX = Math.floor(ev.offsetX/scale);\r\n            this.mouseY = Math.floor(ev.offsetY/scale);\r\n        }.bind(this));\r\n        canvas2.addEventListener('mousedown',function(ev) {\r\n            this.mousePressed[ev.button] = true;\r\n            this.mouseHeld[ev.button] = true;\r\n        }.bind(this));\r\n        canvas2.addEventListener('mouseup',function(ev) {\r\n            this.mouseReleased[ev.button] = true;\r\n            this.mouseHeld[ev.button] = false;\r\n        }.bind(this));\r\n        canvas2.addEventListener('contextmenu',function(ev) {\r\n            // No context menu pls\r\n            ev.preventDefault();\r\n        });\r\n\r\n        /**\r\n         * Checks if the mouse is within a certain region of the canvas.\r\n         * @param {number} x1 X of top-left corner (inclusive)\r\n         * @param {number} y1 Y of top-left corner (inclusive)\r\n         * @param {number} x2 X of bottom-right corner (exclusive)\r\n         * @param {number} y2 Y of bottom-right corner (exclusive)\r\n         * @returns {boolean}\r\n         */\r\n        this.mouseWithin = function(x1,y1,x2,y2) {\r\n            if (this.mouseX >= x1 && this.mouseX < x2 && this.mouseY >= y1 && this.mouseY < y2) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }.bind(this);\r\n\r\n        /**\r\n         * Resets frame-specific input, such as button/mouse presses and releases\r\n         */\r\n        this.reset = function() {\r\n            this.mousePressed.fill(false);\r\n            this.mouseReleased.fill(false);\r\n            // Keyboard press\r\n            // Keyboard release\r\n        }.bind(this);\r\n    };\n\n    // Main loop\r\n    function main() {\r\n        // Set rendering on framebuffer and with correct texture\r\n        beginRender(texture);\r\n\r\n        /*\r\n        function drawMasks(bx,by,startMask,pal,head) {\r\n            if (!head) {head = spr.head;}\r\n            for (let x = 0; x < 6; x++) {\r\n                drawSpriteSwap(head,0,bx+(32*x),by,pal);\r\n                drawSpriteSwap(spr.kanohi,startMask+x,bx+(32*x),by,pal);\r\n            }\r\n        }\r\n\r\n        drawMasks(0,0,0,palettes.tahu);\r\n        drawMasks(200,0,6,palettes.vakama,spr.headSecondary);\r\n        drawMasks(0,40,0,palettes.pohatu);\r\n        drawMasks(200,40,6,palettes.onewa,spr.headSecondary);\r\n        drawMasks(0,80,0,palettes.onua);\r\n        drawMasks(200,80,6,palettes.whenua,spr.headSecondary);\r\n        drawMasks(0,120,0,palettes.kopaka);\r\n        drawMasks(200,120,6,palettes.nuju,spr.headSecondary);\r\n        drawMasks(0,160,0,palettes.gali);\r\n        drawMasks(200,160,6,palettes.nokama,spr.headSecondary);\r\n        drawMasks(0,200,0,palettes.lewa);\r\n        drawMasks(200,200,6,palettes.matau,spr.headSecondary);\r\n\r\n        */\r\n        \r\n        Battle.step();\r\n\r\n        drawGameTexture();\r\n        Input.reset();\r\n        requestAnimationFrame(main);\r\n    }\r\n\r\n    // Launch\r\n    let texture = null;\r\n    (async () => {\r\n\r\n        // Loading resources here\r\n        texture = await loadTexture('../asset/atlas.png');\r\n\r\n        main();\r\n    })();\n\n}());\n"]}