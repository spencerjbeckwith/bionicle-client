(function(){'use strict';function N(){o=window.innerWidth<window.innerHeight?window.innerWidth/j.width:window.innerHeight/j.height,o=i(h(o),1),k.width=j.width*o,k.height=j.height*o,l.width=k.width,l.height=k.height,n.imageSmoothingEnabled=!1,n.setTransform(1,0,0,1,0,0),n.scale(o,o)}function O(b,a){var c=Math.min;let d=parseInt(b.slice(0,2),16)/255,g=parseInt(b.slice(2,4),16)/255,j=parseInt(b.slice(4,6),16)/255;return a&&(d=i(0,c(1,d+a)),g=i(0,c(1,g+a)),j=i(0,c(1,j+a))),[d,g,j]}function a(b,a,c,d=.2,e=.2,f=.2){this.primary=[O(b,0),O(b,d),O(b,-d)],this.secondary=[O(a,0),O(a,e),O(a,-f)],this.eye=[O(c,0),O(c,f),O(c,-f)]}function b(d){const a=new y(d.vertex,d.fragment);a.positionAttribute=m.getAttribLocation(a.program,"a_position"),a.textureAttribute=m.getAttribLocation(a.program,"a_texcoord"),a.positionMatrix=m.getUniformLocation(a.program,"u_positionMatrix"),a.textureMatrix=m.getUniformLocation(a.program,"u_texcoordMatrix"),a.blendUniform=m.getUniformLocation(a.program,"u_blend"),a.buffer=m.createBuffer();const b=new Float32Array([0,0,0,1,1,1,1,1,1,0,0,0]);return m.bindBuffer(m.ARRAY_BUFFER,a.buffer),m.bufferData(m.ARRAY_BUFFER,b,m.STATIC_DRAW),m.enableVertexAttribArray(a.positionAttribute),m.vertexAttribPointer(a.positionAttribute,2,m.FLOAT,!1,0,0),m.enableVertexAttribArray(a.textureAttribute),m.vertexAttribPointer(a.textureAttribute,2,m.FLOAT,!1,0,0),a.use=function(){x!==this&&(x=this,m.useProgram(this.program),m.bindBuffer(m.ARRAY_BUFFER,a.buffer),m.bufferData(m.ARRAY_BUFFER,new Float32Array(b),m.STATIC_DRAW),m.vertexAttribPointer(A.positionAttribute,2,m.FLOAT,!1,0,0))},a}async function c(f){return new Promise(function(a,b){const c=m.createTexture();m.bindTexture(m.TEXTURE_2D,c),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);const d=new Image;d.src=f,d.addEventListener("load",function(){m.bindTexture(m.TEXTURE_2D,c),m.texImage2D(m.TEXTURE_2D,0,m.RGBA,m.RGBA,m.UNSIGNED_BYTE,d),a(c)}),d.addEventListener("error",function(c){b(c)})})}function d(b){m.bindFramebuffer(m.FRAMEBUFFER,H),m.viewport(0,0,j.width,j.height),m.clearColor(0,0,0,1),m.clear(m.COLOR_BUFFER_BIT),n.clearRect(0,0,j.width,j.height),n.save(),m.bindTexture(m.TEXTURE_2D,b),C.use(),m.uniform4f(C.blendUniform,1,1,1,1)}function e(){m.bindFramebuffer(m.FRAMEBUFFER,null),m.viewport(0,0,k.width,k.height),m.clearColor(0,0,0,0),m.clear(m.COLOR_BUFFER_BIT),m.bindTexture(m.TEXTURE_2D,D),C.use(),m.bindBuffer(m.ARRAY_BUFFER,C.buffer),m.enableVertexAttribArray(C.positionAttribute),m.vertexAttribPointer(C.positionAttribute,2,m.FLOAT,!1,0,0),m.uniformMatrix3fv(C.positionMatrix,!1,E),m.uniformMatrix3fv(C.textureMatrix,!1,F),m.uniform4fv(C.blendUniform,G),m.drawArrays(m.TRIANGLES,0,6),n.restore()}function P(c,a){return a=h(a),c.images[a]||(a-=c.images.length),a}function g(h,c,n,e,f,i=1,j=1,a=1,k=1,g=null){B.use(),c=P(h,c);let b=s.projection;b=s.translation(b,n,e),b=s.scaling(b,h.width,h.height),g&&(b=g(b)),m.uniformMatrix3fv(B.positionMatrix,!1,b),m.uniformMatrix3fv(B.textureMatrix,!1,h.images[c].textureMatrix),m.uniform4f(B.blendUniform,j,a,k,i),B.setPalette(f),m.drawArrays(m.TRIANGLES,0,6)}function f(){function b(h,a,b,c,d){d||(d=K.head);for(let e=0;6>e;e++)g(d,0,h+32*e,a,c),g(K.kanohi,b+e,h+32*e,a,c)}d(L),b(0,0,0,v.tahu),b(200,0,6,v.vakama,K.headSecondary),b(0,40,0,v.pohatu),b(200,40,6,v.onewa,K.headSecondary),b(0,80,0,v.onua),b(200,80,6,v.whenua,K.headSecondary),b(0,120,0,v.kopaka),b(200,120,6,v.nuju,K.headSecondary),b(0,160,0,v.gali),b(200,160,6,v.nokama,K.headSecondary),b(0,200,0,v.lewa),b(200,200,6,v.matau,K.headSecondary),e(),requestAnimationFrame(f)}var i=Math.max,h=Math.floor,j={width:400,height:240,atlasWidth:2048,atlasHeight:2048};const k=document.createElement("canvas"),l=document.createElement("canvas");document.body.appendChild(k),document.body.appendChild(l),k.width=j.width,k.height=j.height,l.width=j.width,l.height=j.height;const m=k.getContext("webgl",{antialias:!1});if(null===m)throw new Error("Could not initialize WebGL!");const n=l.getContext("2d");n.imageSmoothingEnabled=!1;let o=1;N(),window.addEventListener("resize",N),window.addEventListener("orientationchange",N);var p={vertex:`
attribute vec2 a_position;

uniform mat3 u_positionMatrix;

void main() {
    gl_Position = vec4((u_positionMatrix*vec3(a_position,1)).xy,0,1);
}`,fragment:`
precision mediump float;

uniform vec4 u_color;

void main() {
    gl_FragColor = u_color;
}`},q={vertex:`
// No change from image shader here
attribute vec2 a_position;
attribute vec2 a_texcoord;

uniform mat3 u_positionMatrix;
uniform mat3 u_texcoordMatrix;

varying vec2 v_texcoord;

void main() {
    gl_Position = vec4((u_positionMatrix*vec3(a_position,1)).xy,0,1);
    v_texcoord = (u_texcoordMatrix*vec3(a_texcoord,1.0)).xy;
}`,fragment:`
precision mediump float;
uniform sampler2D u_image;                                  
uniform vec4 u_blend;

// Colors to swap
uniform vec3 u_replacedPrimary;
uniform vec3 u_replacedPrimaryLight;
uniform vec3 u_replacedPrimaryDark;
uniform vec3 u_replacedSecondary;
uniform vec3 u_replacedSecondaryLight;
uniform vec3 u_replacedSecondaryDark;
uniform vec3 u_replacedEye;
uniform vec3 u_replacedEyeLight;
uniform vec3 u_replacedEyeDark;

// What to swap to
uniform vec3 u_primary;
uniform vec3 u_primaryLight;
uniform vec3 u_primaryDark;
uniform vec3 u_secondary;
uniform vec3 u_secondaryLight;
uniform vec3 u_secondaryDark;
uniform vec3 u_eye;
uniform vec3 u_eyeLight;
uniform vec3 u_eyeDark;

varying vec2 v_texcoord;

void main() {
    // Get current frag color from texture
    vec4 color = texture2D(u_image,v_texcoord);

    // If color equals a value to swap...
    if (color.rgb == u_replacedPrimary) {
        // Set it to the new replacement
        color = vec4(u_primary.rgb,color.a);
    } else if (color.rgb == u_replacedPrimaryLight) {
        color = vec4(u_primaryLight.rgb,color.a);
    } else if (color.rgb == u_replacedPrimaryDark) {
        color = vec4(u_primaryDark.rgb,color.a);
    } else if (color.rgb == u_replacedSecondary) {
        color = vec4(u_secondary.rgb,color.a);
    } else if (color.rgb == u_replacedSecondaryLight) {
        color = vec4(u_secondaryLight.rgb,color.a);
    } else if (color.rgb == u_replacedSecondaryDark) {
        color = vec4(u_secondaryDark.rgb,color.a);
    } else if (color.rgb == u_replacedEye) {
        color = vec4(u_eye.rgb,color.a);
    } else if (color.rgb == u_replacedEyeLight) {
        color = vec4(u_eyeLight.rgb,color.a);
    } else if (color.rgb == u_replacedEyeDark) {
        color = vec4(u_eyeDark.rgb,color.a);
    }

    // Blend and set
    gl_FragColor = color*u_blend;
}`};const s={multiply:function(u,c){var a=u[0],b=u[1],d=u[2],e=u[3],f=u[4],g=u[5],h=u[6],i=u[7],j=u[8],k=c[0],l=c[1],m=c[2],n=c[3],o=c[4],p=c[5],q=c[6],r=c[7],s=c[8];return[k*a+l*e+m*h,k*b+l*f+m*i,k*d+l*g+m*j,n*a+o*e+p*h,n*b+o*f+p*i,n*d+o*g+p*j,q*a+r*e+s*h,q*b+r*f+s*i,q*d+r*g+s*j]},translation:function(d,a,b){return s.multiply(d,[1,0,0,0,1,0,a,b,1])},rotation:function(e,a){var b=Math.cos(a),d=Math.sin(a);return s.multiply(e,[b,-d,0,d,b,0,0,0,1])},scaling:function(d,a,b){return s.multiply(d,[a,0,0,0,b,0,0,0,1])},projection:[2/j.width,0,0,0,-2/j.height,0,-1,1,1],identity:[1,0,0,0,1,0,0,0,1]},t={red:"c4281b",darkPink:"c470a0",orange:"da8540",brown:"675237",tan:"d7c599",black:"1b2a34",green:"287f46",darkGray:"6d6e6c",white:"d0d1d0",mediumBlue:"6e99c9",lightGray:"a1a5a2",blue:"0d69ab",yellow:"f5cd2f",lime:"a4bd46",darkOrange:"a05f34",purple:"6b327b",sandBlue:"74869c",darkTurquoise:"008f9b",metallicGold:"dbac34",metallicSilver:"a9a5b4",pearlLightGray:"9ca3a8"},u={primary:"b5b5b5",primaryLight:"e6e6e6",primaryDark:"545454",secondary:"2700ad",secondaryLight:"734cfa",secondaryDark:"12004b",eye:"ae0000",eyeLight:"fb4c4c",eyeDark:"4b0000"},v={tahu:new a(t.red,t.orange,t.darkPink),pohatu:new a(t.brown,t.tan,t.orange),onua:new a(t.black,t.darkGray,t.green),kopaka:new a(t.white,t.lightGray,t.mediumBlue),gali:new a(t.blue,t.mediumBlue,t.yellow),lewa:new a(t.green,t.lime,t.lime),vakama:new a(t.orange,t.red,t.darkPink),onewa:new a(t.tan,t.brown,t.orange),whenua:new a(t.darkGray,t.black,t.green),nuju:new a(t.lightGray,t.white,t.mediumBlue),nokama:new a(t.mediumBlue,t.blue,t.yellow),matau:new a(t.lime,t.green,t.lime)};v.tahu.gold=new a(t.metallicGold,t.orange,t.darkPink,.4),v.tahu.silver=new a(t.metallicSilver,t.orange,t.darkPink,.4),v.pohatu.gold=new a(t.metallicGold,t.tan,t.orange,.4),v.pohatu.silver=new a(t.metallicSilver,t.tan,t.orange,.4),v.onua.gold=new a(t.metallicGold,t.darkGray,t.green,.4),v.onua.silver=new a(t.metallicSilver,t.darkGray,t.green,.4),v.kopaka.gold=new a(t.metallicGold,t.lightGray,t.mediumBlue,.4),v.kopaka.silver=new a(t.metallicSilver,t.lightGray,t.mediumBlue,.4),v.gali.gold=new a(t.metallicGold,t.mediumBlue,t.yellow,.4),v.gali.silver=new a(t.metallicSilver,t.mediumBlue,t.yellow,.4),v.lewa.gold=new a(t.metallicGold,t.lime,t.lime,.4),v.lewa.silver=new a(t.metallicSilver,t.lime,t.lime,.4);const w={primary:[O(u.primary,0),O(u.primaryLight,0),O(u.primaryDark,0)],secondary:[O(u.secondary,0),O(u.secondaryLight,0),O(u.secondaryDark,0)],eye:[O(u.eye,0),O(u.eyeLight,0),O(u.eyeDark,0)]};let x=null;class y{constructor(c,a){this.program=this.createShaderProgram(c,a)}use(){x!==this&&(x=this,m.useProgram(this.program))}createShaderProgram(f,a){const b=this.createShader(m.VERTEX_SHADER,f),c=this.createShader(m.FRAGMENT_SHADER,a),d=m.createProgram();if(m.attachShader(d,b),m.attachShader(d,c),m.linkProgram(d),m.getProgramParameter(d,m.LINK_STATUS))return d;else{const b=m.getProgramInfoLog(d);throw m.deleteProgram(d),new Error(`Could not link shader program: ${b}`)}}createShader(d,a){const b=m.createShader(d);if(m.shaderSource(b,a),m.compileShader(b),m.getShaderParameter(b,m.COMPILE_STATUS))return b;else{const c=m.getShaderInfoLog(b);throw m.deleteShader(b),new Error(`Could not compile shader: ${c}`)}}}const A=function(){const b=new y(p.vertex,p.fragment);return b.positionAttribute=m.getAttribLocation(b.program,"a_position"),b.positionMatrix=m.getUniformLocation(b.program,"u_positionMatrix"),b.colorUniform=m.getUniformLocation(b.program,"u_color"),b.buffer=m.createBuffer(),m.bindBuffer(m.ARRAY_BUFFER,b.buffer),m.bufferData(m.ARRAY_BUFFER,new Float32Array([0,0,.5,.5]),m.DYNAMIC_DRAW),m.enableVertexAttribArray(b.positionAttribute),m.vertexAttribPointer(b.positionAttribute,2,m.FLOAT,!1,0,0),b.use(),m.uniformMatrix3fv(b.positionMatrix,!1,s.projection),b}(),B=function(){const c=b(q);return c.use(),m.uniform3fv(m.getUniformLocation(c.program,"u_replacedPrimary"),w.primary[0]),m.uniform3fv(m.getUniformLocation(c.program,"u_replacedPrimaryLight"),w.primary[1]),m.uniform3fv(m.getUniformLocation(c.program,"u_replacedPrimaryDark"),w.primary[2]),m.uniform3fv(m.getUniformLocation(c.program,"u_replacedSecondary"),w.secondary[0]),m.uniform3fv(m.getUniformLocation(c.program,"u_replacedSecondaryLight"),w.secondary[1]),m.uniform3fv(m.getUniformLocation(c.program,"u_replacedSecondaryDark"),w.secondary[2]),m.uniform3fv(m.getUniformLocation(c.program,"u_replacedEye"),w.eye[0]),m.uniform3fv(m.getUniformLocation(c.program,"u_replacedEyeLight"),w.eye[1]),m.uniform3fv(m.getUniformLocation(c.program,"u_replacedEyeDark"),w.eye[2]),c.uniformPrimary=m.getUniformLocation(c.program,"u_primary"),c.uniformPrimaryLight=m.getUniformLocation(c.program,"u_primaryLight"),c.uniformPrimaryDark=m.getUniformLocation(c.program,"u_primaryDark"),c.uniformSecondary=m.getUniformLocation(c.program,"u_secondary"),c.uniformSecondaryLight=m.getUniformLocation(c.program,"u_secondaryLight"),c.uniformSecondaryDark=m.getUniformLocation(c.program,"u_secondaryDark"),c.uniformEye=m.getUniformLocation(c.program,"u_eye"),c.uniformEyeLight=m.getUniformLocation(c.program,"u_eyeLight"),c.uniformEyeDark=m.getUniformLocation(c.program,"u_eyeDark"),c.setPalette=function(a){m.uniform3fv(c.uniformPrimary,a.primary[0]),m.uniform3fv(c.uniformPrimaryLight,a.primary[1]),m.uniform3fv(c.uniformPrimaryDark,a.primary[2]),m.uniform3fv(c.uniformSecondary,a.secondary[0]),m.uniform3fv(c.uniformSecondaryLight,a.secondary[1]),m.uniform3fv(c.uniformSecondaryDark,a.secondary[2]),m.uniform3fv(c.uniformEye,a.eye[0]),m.uniform3fv(c.uniformEyeLight,a.eye[1]),m.uniform3fv(c.uniformEyeDark,a.eye[2])},c}(),C=b({vertex:`
attribute vec2 a_position;
attribute vec2 a_texcoord;

uniform mat3 u_positionMatrix;
uniform mat3 u_texcoordMatrix;

varying vec2 v_texcoord;

void main() {
    gl_Position = vec4((u_positionMatrix*vec3(a_position,1)).xy,0,1);
    v_texcoord = (u_texcoordMatrix*vec3(a_texcoord,1.0)).xy;
}`,fragment:`
precision mediump float;

uniform sampler2D u_image;
uniform vec4 u_blend;

varying vec2 v_texcoord;

void main() {
    gl_FragColor = texture2D(u_image,v_texcoord)*u_blend;
}`});m.clearColor(0,0,0,1),m.clear(m.COLOR_BUFFER_BIT),m.disable(m.DEPTH_TEST),m.enable(m.BLEND),m.blendFunc(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA);const D=m.createTexture();m.bindTexture(m.TEXTURE_2D,D),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texImage2D(m.TEXTURE_2D,0,m.RGBA,j.width,j.height,0,m.RGBA,m.UNSIGNED_BYTE,null);const E=[2,0,0,0,-2,0,-1,1,1],F=[1,0,0,0,-1,0,0,1,1];let G=[1,1,1,1];const H=m.createFramebuffer();m.bindFramebuffer(m.FRAMEBUFFER,H),m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,m.TEXTURE_2D,D,0);var I=[{name:"kanohi",width:40,height:48,images:[{x:0,y:0},{x:48,y:0},{x:96,y:0},{x:144,y:0},{x:192,y:0},{x:240,y:0},{x:288,y:0},{x:336,y:0},{x:384,y:0},{x:432,y:0},{x:480,y:0},{x:528,y:0}]},{name:"head",width:40,height:40,images:[{x:576,y:0},{x:624,y:0},{x:672,y:0},{x:720,y:0}]},{name:"headSecondary",width:40,height:40,images:[{x:768,y:0},{x:816,y:0},{x:864,y:0},{x:912,y:0}]}];class J{constructor(e,a,b,c){this.name=e,this.width=a,this.height=b,this.images=c;for(let d,g=0;g<this.images.length;g++)d=s.identity,d=s.translation(d,c[g].x/j.atlasWidth,c[g].y/j.atlasHeight),d=s.scaling(d,this.width/j.atlasWidth,this.height/j.atlasHeight),this.images[g].textureMatrix=d}}const K={};for(let c in I){const a=I[c];K[a.name]=new J(a.name,a.width,a.height,a.images)}let L=null;(async()=>{L=await c("../asset/atlas.png"),f()})()})();